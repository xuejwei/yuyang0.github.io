<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title></title>
  <link href="http://yuyang.pancakeapps.com/"/>
  <link type="application/atom+xml" rel="self" href="/atom.xml"/>
  <updated>2013-06-01T20:28:51-07:00</updated>
  <id>http://yuyang.pancakeapps.com/</id>
  <author>
    <name>Yu Yang</name>
    <email>yy2012cn@gmail.com</email>
  </author>

  
  <entry>
    <id>how-to-read-a-book.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/how-to-read-a-book.html"/>
    <title>how-to-read-a-book</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;how-to-read-a-book&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;How to Read a Book&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;检视阅读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;分析阅读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;How to Read a Book&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;检视阅读&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;读书名，目录，序，前言，索引（preface index），然后随机的选几页阅读，
或者根据目录选择感兴趣的章节阅读，但最多只连续的阅读几页，这个阶段
必须注意时间控制。
&lt;/li&gt;
&lt;li&gt;快速而粗略的对一本书扫一遍，遇到不懂的地方不要停下来，要注意把握书
的总体上的一些特点与内容，如讲了什么，结构是什么样的。
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;分析阅读&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>Theory-Computation.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/Theory-Computation.html"/>
    <title>Theory-Computation</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;Theory-Computation&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;计算理论笔记&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;数学基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;三大理论&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-2-1&quot;&gt;自动机理论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2&quot;&gt;可计算理论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-3&quot;&gt;计算复杂度理论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;计算理论笔记&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;数学基础&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;谓词是一个函数，他的结果只能是true或者false，也就是值域是{true, false}
&lt;/li&gt;
&lt;li&gt;关系（k元关系）：有k个自变量的谓词，通常的&amp;gt;, &amp;lt;, =都是二元关系，a&amp;lt;b,实际可以写成(&amp;lt; a b)
&lt;/li&gt;
&lt;li&gt;关系是一个谓词（也是一个函数），所以一般应该用前缀表达式，可是实际运用时，因为惯例，可能用中缀表达式，&amp;lt;,&amp;gt;,=都是中缀表达式
&lt;/li&gt;
&lt;li&gt;关系的3个性质：自反性(对每一个x =&amp;gt; xRx)，对称性(xRy &amp;lt;=&amp;gt; yRx)，传递性(xRy且yRz =&amp;gt; xRz)
满足这3个性质那么就是等价关系。
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;三大理论&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-2-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-1&quot;&gt;自动机理论&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-1&quot;&gt;
&lt;p&gt;
正则语言：能被一个有穷自动机接受的语言
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-2&quot;&gt;可计算理论&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-2-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-3&quot;&gt;计算复杂度理论&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>Probability.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/Probability.html"/>
    <title>Probability</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;Probability&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;概率论&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;重要的概念&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1&quot;&gt;事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-2&quot;&gt;事件的和&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3&quot;&gt;事件的积&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-4&quot;&gt;互斥事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-5&quot;&gt;对立事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-6&quot;&gt;独立事件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;概率论&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;重要的概念&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;事件&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;p&gt;
事件：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;必须建立在一个明确的试验的基础上
&lt;/li&gt;
&lt;li&gt;这个试验的所有可能的结果已知(每一个可能的结果叫一个基本事件)
&lt;/li&gt;
&lt;li&gt;事件明确的界定这些结果中的一部分。
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;事件的和&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;p&gt;
A+B：代表的事件的和（或），P（A+B）与P（A）+P(B)只有在A与B是互斥事件时才成立，也就是二者没有交集。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-3&quot;&gt;事件的积&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-3&quot;&gt;
&lt;p&gt;
AB:A,B都发生（并）， 只有在A，B是独立事件时P（AB） 与P（A）P（B）才相等。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-4&quot;&gt;互斥事件&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-4&quot;&gt;
&lt;p&gt;
如果两个事件不可能同时发生，那么他们就是互斥事件，表现在集合上就是两个集合无交集
互斥事件有一个发生的概率：P(A+B) = P(A) + P(B) (用集合很好理解)
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-5&quot;&gt;对立事件&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-5&quot;&gt;
&lt;p&gt;
是互斥事件的特例，表现在集合上两个集合互为补集、
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-6&quot;&gt;独立事件&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-6&quot;&gt;
&lt;p&gt;
如果事件B发生对事件A发生的概率无影响，那么A,B就是独立事件。。
P(A | B) = P(AB) / P(B) = P(A)
P(AB) = P(A) P(B)
推论：P(A B负) / P(B负) = P(A)
如果A，B是独立事件，那么A，B同时发生的概率是二者的乘积
特别注意独立事件表现在概率上，两个集合是有交集的，独立事件的本质是：A在B发生的前提下的条件概率等于A的本来概率，也就是B的发生对A的发生概率没有影响。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>IT术语.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/IT术语.html"/>
    <title>IT术语</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;IT术语&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;IT术语&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;透明的（transparent）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;IT术语&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;透明的（transparent）&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
透而不见，比如玻璃，所以说什么东西是透明的就是说其内部不可见，可以无视
其实现，而生活中一般的意思是对内部一目了然，如透明度
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>sicp.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/sicp.html"/>
    <title>SICP笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;SICP笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;&lt;b&gt;SICP笔记&lt;/b&gt;&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;第一章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;primitive element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;some example in the book&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-3-1&quot;&gt;GCD (greatest common divisors)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-2&quot;&gt;素数检查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-4&quot;&gt;一些个人体会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;b&gt;SICP笔记&lt;/b&gt;&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;第一章&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;a programming language must have some primitive procedures and primitive
data, for example mathmatics operations(+ - * / and so on),and the
numbers(primitive data).
&lt;/li&gt;
&lt;li&gt;Nesting of combinations provides a means of combining operations.
&lt;/li&gt;
&lt;li&gt;Definitions that associate names with values provide a limited means of abstraction
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
提供基本的数据与函数，然后通过嵌套来构建组合式以及复合函数，同时为复合
函数或者组合式命名也给抽象带来了方便。
&lt;/p&gt;

&lt;p&gt;
正则序：在计算过程中先代换，完全代换后在一次求值
应用序：在计算过程中先求值在代换
二者的比较：正则序相对与应用序一般会有较多的重复运算，因为过程体中可以
            多次引用形参，那么正则序代换后就会多次求值，而应用序则是先
            求值在代换所以没有这个问题，对于应用序，每个过程的形式参数
            都会先求值在进入过程计算
recursive procedure:语法上的递归
recursive process:计算过程的递归
语法上递归的函数可能表示的是一个递归计算过程，如果程序设计语言支持尾递
归，那么可以获得和循环相同的效率，本质上说，循环结构都只是语法糖衣，
scheme支持尾递归，C不支持尾递归。
&lt;/p&gt;

&lt;p&gt;
一个程序设计语言必须提供的功能：primitive procedure and primitive data，
if结构，构造复合过程的方法（自定义函数）。
&lt;/p&gt;

&lt;p&gt;
高阶函数：
  函数可以作为参数传递，可以作为结果返回。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;primitive element&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;Numbers and arithmetic operations are primitive data and procedures.
&lt;/li&gt;
&lt;li&gt;Nesting of combinations provides a means of combining operations.
&lt;/li&gt;
&lt;li&gt;Definitions that associate names with values provide a limited means of abstraction.
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;some example in the book&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-3-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-1&quot;&gt;GCD (greatest common divisors)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-1&quot;&gt;
&lt;p&gt;
gcd(a, b) = gcd (b, r)        (r = a % b)
&lt;/p&gt;

&lt;p&gt;
证明：设a&amp;gt;b且 a = kb + r 其中k = a/b, r = a % b都为整数
      若存在一个数m被a，b整除，则m也能被（kb + r）整除，又m能被kb整除，
      所以必能被r整除
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-2&quot;&gt;素数检查&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;在2～sqrt(x)之间遍历，如果找到一个因子则意味着x不是素数
&lt;/li&gt;
&lt;li&gt;费马小定律：
如果n是素数，则a&lt;sup&gt;n&lt;/sup&gt; % n = a % n  (a是小于n的任意正整数）
&lt;/li&gt;
&lt;li&gt;通过费马小定律的检查只是素数的必要条件而不是充分条件，存在能通过所
有费马检查但却不是素数的数，但是这种数非常罕见，一般情况下对于数n如
果它不是素数，那么对于小于n的数中大部分不能通过费马检查，因此其概率
大于1/2，据此就可以构造概率算法
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-4&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-4&quot;&gt;一些个人体会&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
church数: &lt;br /&gt;
  数实际上没有具体的实际意义，本质上数只是表示一个个孤立的状态的符号， &lt;br /&gt;
  它唯一的意义就是能表示出这一个个状态之间是不同的，如1表示的状态和2表 &lt;br /&gt;
  示的状态时不同的，而在这些状态上定义+ - * / 这样的的运算，在执行这些 &lt;br /&gt;
  运算时可以从一个状态跳到另外一个状态 &lt;br /&gt;
lambda演算: &lt;br /&gt;
  1. 函数与形参无关，也就是说只要将形参名与函数体对该形参名的引用同时 &lt;br /&gt;
     替换则函数是等价的 &lt;br /&gt;
  2. 如果函数有多个参数，调用时没有给出所有参数那么该调用返回一个函数 &lt;br /&gt;
     eg：(define (add x y) (+ x y)) &lt;br /&gt;
         调用(add 1) 返回 (lambda(y) (+ 1 y)) &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>how-to-study.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/how-to-study.html"/>
    <title>how to study</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;how to study&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;学习方法&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;知识面覆盖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;练习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;自省&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;学习方法&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;知识面覆盖&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
这一阶段主要目标是对所学的知识有一个大体的印象，要从宏观上把握要学习的
知识，这一阶段是效率最低的，所以要加速完成，课程视频可以2X倍速观看，看
书的话不必做笔记，或者只是读完一个主要章节之后才做一些主旨性，概要性的
笔记
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;练习&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;p&gt;
误区：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;没有及时的反馈，比如说没有检查自己答案的对错
&lt;/li&gt;
&lt;li&gt;题海战术
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
对于非技术类的学科，它的需求是掌握概念，而不是解决实际问题，所以一般只
需要做很少题目
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;自省&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;p&gt;
当对某个东西心里没底，但又不知道什么地方不懂时，就需要自省，可以利用费
曼技巧来查漏补缺。
&lt;/p&gt;

&lt;p&gt;
费曼技巧：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;拿一张白纸
&lt;/li&gt;
&lt;li&gt;在白纸上写上要理解的想法或者技巧
&lt;/li&gt;
&lt;li&gt;用自己的话解释它，就像你在教别人一样
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
费曼技巧的使用：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;对完全摸不着头脑的概念，可以先看书上的介绍性章节，然后应用费曼技巧，
也就是用自己的话来解释，阐述这个概念
&lt;/li&gt;
&lt;li&gt;对于各种过程（各种数学证明过程，化学方程式，生物过程），要解释每一
步在干什么，以及它时怎么执行的
&lt;/li&gt;
&lt;li&gt;对于各种公式，可以对公式的各个部分分而化之，并理解各个部分的意义
&lt;/li&gt;
&lt;li&gt;对于需要记忆的内容，在不参考讲义或者课本的情况下，如果能顺利的应用
费曼技巧那么就ok
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>django.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/django.html"/>
    <title>DJANGO笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;DJANGO笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;django&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;模板&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1&quot;&gt;模板的基本语法&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1-1&quot;&gt;基本示例代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-1-2&quot;&gt;模板的&#39;.&#39;的用法:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-1-3&quot;&gt;过滤器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-2&quot;&gt;使用模板的方法：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3&quot;&gt;模板的包含与继承&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;表单&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;django&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
django是一个python编写的full stack web开发框架
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;模板&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;模板的基本语法&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-1-1&quot;&gt;基本示例代码&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-1-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;html&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;head&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;Ordering notice&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;title&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;head&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;body&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;Ordering notice&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;h1&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;Dear {{ person_name }},&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;Thanks for placing an order from {{ company }}. It&#39;s scheduled to
      ship on {{ ship_date|date:&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;F j, Y&quot;&lt;/span&gt; }}.&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;Here are the items you&#39;ve ordered:&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;ul&lt;/span&gt;&amp;gt;
      {% for item in item_list %}
      &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;li&lt;/span&gt;&amp;gt;{{ item }}&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;li&lt;/span&gt;&amp;gt;
      {% endfor %}
    &amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;ul&lt;/span&gt;&amp;gt;

    {% if ordered_warranty %}
    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;Your warranty information will be included in the packaging.&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;
    {% else %}
    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;You didn&#39;t order a warranty, so you&#39;re on your own when
      the products inevitably stop working.&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;
    {% endif %}

    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;Sincerely,&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;br&lt;/span&gt; /&amp;gt;{{ company }}&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;html&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-1-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-1-2&quot;&gt;模板的&#39;.&#39;的用法:&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;引用字典
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; django.template &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; Template, Context
&lt;span style=&quot;color: #FF6400;&quot;&gt;person&lt;/span&gt; = {&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Sally&#39;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;age&#39;&lt;/span&gt;: &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;43&#39;&lt;/span&gt;}
&lt;span style=&quot;color: #FF6400;&quot;&gt;t&lt;/span&gt; = Template(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;{{ person.name }} is {{ person.age }} years old.&#39;&lt;/span&gt;)
&lt;span style=&quot;color: #FF6400;&quot;&gt;c&lt;/span&gt; = Context({&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;person&#39;&lt;/span&gt;: person})
t.render(c)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#result is: u&#39;Sally is 43 years old.&#39;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;引用list的索引
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; django.template &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; Template, Context
&lt;span style=&quot;color: #FF6400;&quot;&gt;t&lt;/span&gt; = Template(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Item 2 is {{ items.2 }}.&#39;&lt;/span&gt;)
&lt;span style=&quot;color: #FF6400;&quot;&gt;c&lt;/span&gt; = Context({&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;items&#39;&lt;/span&gt;: [&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;apples&#39;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;bananas&#39;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;carrots&#39;&lt;/span&gt;]})
t.render(c)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# result is :u&#39;Item 2 is carrots.&#39;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;引用对象的属性
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; django.template &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; Template, Context
 &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; datetime
 d = datetime.date(1993, 5, 2)
 t = Template(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;The month is {{ date.month }} and the year is {{ date.year }}.&#39;&lt;/span&gt;)
 c = Context({&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;date&#39;&lt;/span&gt;: d})
 t.render(c)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# result is : u&#39;The month is 5 and the year is 1993.&#39;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;引用对象的方法(只能引用不需要参数的方法)
和引用对象的属性类似，不需要()
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-1-3&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-1-3&quot;&gt;过滤器&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-1-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;addslashes: 添加反斜杠到任何反斜杠
&lt;/li&gt;
&lt;li&gt;date: 按指定的格式字符串参数格式化 date 或者 datetime 对象，范例：
{{ pub&lt;sub&gt;date|date&lt;/sub&gt;:&quot;F j, Y&quot; }}
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;使用模板的方法：&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;创建一个模板对象
&lt;/li&gt;
&lt;li&gt;创建一个contex对象(和字典相似)
&lt;/li&gt;
&lt;li&gt;render模板
&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; django &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; template
&lt;span style=&quot;color: #FF6400;&quot;&gt;t&lt;/span&gt; = template.Template(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;My name is {{ name }}.&#39;&lt;/span&gt;)
&lt;span style=&quot;color: #FF6400;&quot;&gt;c&lt;/span&gt; = template.Context({&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Adrian&#39;&lt;/span&gt;})
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
因为是重复性的工作，所以django提供了shortcut,建议现在settings.py设定
TEMPLATE&lt;sub&gt;DIRS&lt;/sub&gt;&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; django.shortcuts &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; render_to_response
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; datetime

&lt;span style=&quot;color: #FBDE2D;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;current_datetime&lt;/span&gt;(request):
    now = datetime.datetime.now()
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;return&lt;/span&gt; render_to_response(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;current_datetime.html&#39;&lt;/span&gt;, {&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;current_date&#39;&lt;/span&gt;: now})
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
render&lt;sub&gt;to&lt;/sub&gt;&lt;sub&gt;response只需要提供模板文件，与一个字典，它会渲染模板，并且返回一&lt;/sub&gt;
个HttpResponse对象,极大的简化了工作
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-3&quot;&gt;模板的包含与继承&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;include标签
{% include &quot;includes/nav.html&quot; %}
&lt;/li&gt;
&lt;li&gt;模板继承
base.html:
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;!DOCTYPE&lt;/span&gt; HTML PUBLIC &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;-//W3C//DTD HTML 4.01//EN&quot;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;html&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;lang&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;{% block title %}{% endblock %}&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;title&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;head&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;body&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;My helpful timestamp site&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;h1&lt;/span&gt;&amp;gt;
    {% block content %}{% endblock %}
    {% block footer %}
    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;hr&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;Thanks for visiting my site.&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;
    {% endblock %}
  &amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;html&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-html&quot;&gt;{% extends &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;base.html&quot;&lt;/span&gt; %}

{% block title %}The current time{% endblock %}

{% block content %}
&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;It is now {{ current_date }}.&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;
{% endblock %}
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
每一个block就是一个子模板可以重定义的区域
根据需要使用任意多的继承次数。使用继承的一种常见方式是下面的三层法：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;创建 base.html 模板，在其中定义站点的主要外观感受。这些都是不常修改甚至从不修改的部分.
&lt;/li&gt;
&lt;li&gt;为网站的每个区域创建 base&lt;sub&gt;SECTION&lt;/sub&gt;.html 模板(例如, base&lt;sub&gt;photos&lt;/sub&gt;.html 和 base&lt;sub&gt;forum&lt;/sub&gt;.html )。这些模板对 base.html 进行拓展，并包含区域特定的风格与设计。
&lt;/li&gt;
&lt;li&gt;为每种类型的页面创建独立的模板，例如论坛页面或者图片库。这些模板拓展相应的区域模板。
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;Module&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;第一步必须设置settings.py的数据库相关域,用以下代码验证配置是否正确：
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;python manage.py shell &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#enter django shell&lt;/span&gt;

&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; django.db &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; connection
&lt;span style=&quot;color: #FF6400;&quot;&gt;cursor&lt;/span&gt; = connection.cursor()
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;创建一个app(使用module必须创建app)
python manage.py startapp appname
然后在module.py添加代码
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; django.db &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; models

&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# Create your models here.&lt;/span&gt;
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;Publisher&lt;/span&gt;(models.Module):
    &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span style=&quot;color: #61CE3C;&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;
    name = models.CharField(max_length = 30)
    address = models.CharField(max_length = 50)
    city = models.CharField(max_length = 60)
    state_province = models.CharField(max_length = 30)
    country = models.CharField(max_length = 50)
    website = models.URLField()
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;Author&lt;/span&gt;(models.Model):
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=40)
    email = models.EmailField()

&lt;span style=&quot;color: #FBDE2D;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;Book&lt;/span&gt;(models.Model):
    title = models.CharField(max_length=100)
    authors = models.ManyToManyField(Author)
    publisher = models.ForeignKey(Publisher)
    publication_date = models.DateField()
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
然后运行python manage.py validate检查模型语法是否正确，无误后运行
python manage.py sqlall books会显示最终运行的sql语句
python manage.py syncdb会最终执行数据库的创建
&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;访问修改数据库
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# insert a record&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt; = Publisher(name=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Apress&#39;&lt;/span&gt;,
        address=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;2855 Telegraph Ave.&#39;&lt;/span&gt;,
        city=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Berkeley&#39;&lt;/span&gt;,
        state_province=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;CA&#39;&lt;/span&gt;,
        country=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;U.S.A.&#39;&lt;/span&gt;,
        website=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;http://www.apress.com/&#39;&lt;/span&gt;)
p.save()

&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# just update, do not create record&lt;/span&gt;
p.name = &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Apress Publishing&#39;&lt;/span&gt;
p.save()

Publisher.objects.filter(&lt;span style=&quot;color: #94bff3;&quot;&gt;id&lt;/span&gt;=52).update(name=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Apress Publishing&#39;&lt;/span&gt;)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# 访问数据，转换为select语句&lt;/span&gt;
Publisher.objects.all()
Publisher.objects.filter(country=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;U.S.A.&quot;&lt;/span&gt;, state_province=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;CA&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# select ... order by ...&lt;/span&gt;
Publisher.objects.order_by(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;name&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#逆序&lt;/span&gt;
Publisher.objects.order_by(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;-name&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#连锁查询，同时指定where与order by子句&lt;/span&gt;
Publisher.objects.filter(country=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;U.S.A.&quot;&lt;/span&gt;).order_by(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;-name&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# select ... order by ... limit ...&lt;/span&gt;
Publisher.objects.order_by(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;name&#39;&lt;/span&gt;)[0]
Publisher.objects.order_by(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;name&#39;&lt;/span&gt;)[0:2]

&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#delete record&lt;/span&gt;
Publisher.objects.filter(country=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;USA&#39;&lt;/span&gt;).delete()
Publisher.objects.all().delete()
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;表单&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;&lt;colgroup&gt;&lt;col class=&quot;left&quot; /&gt;&lt;col class=&quot;left&quot; /&gt;&lt;col class=&quot;left&quot; /&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;left&quot;&gt;request.path&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;除域名以外的请求路径，以正斜杠开头&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&quot;&lt;i&gt;hello&lt;/i&gt;&quot;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;left&quot;&gt;request.get&lt;sub&gt;host&lt;/sub&gt;()&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;主机名（比如，通常所说的域名）&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&quot;127.0.0.1:8000&quot; or &quot;www.example.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;left&quot;&gt;request.get&lt;sub&gt;full&lt;/sub&gt;&lt;sub&gt;path&lt;/sub&gt;()&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;请求路径，可能包含查询字符串&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;&quot;&lt;i&gt;hello&lt;/i&gt;?print=true&quot;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;left&quot;&gt;request.is&lt;sub&gt;secure&lt;/sub&gt;()&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;如果通过HTTPS访问，则此方法返回True，否则返回False True 或者 False&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;left&quot;&gt;request.META&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;一个字典，包含很多客户端信息(key: HTTP&lt;sub&gt;REFERER&lt;/sub&gt;, HTTP&lt;sub&gt;USER&lt;/sub&gt;&lt;sub&gt;AGENT&lt;/sub&gt;)&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;request.META.get(&#39;HTTP&lt;sub&gt;USER&lt;/sub&gt;&lt;sub&gt;AGENT&#39;&lt;/sub&gt;, &#39;unknown&#39;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;left&quot;&gt;request.GET&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;表单的get方法传递的数据(是一个类字典结构)&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;request.GET[&#39;q&#39;]就是查询字符串&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;left&quot;&gt;request.POST&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;表单的post方法传递的数据（是一个类字典结构）&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>emacs.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/emacs.html"/>
    <title>Emacs/elisp笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;Emacs/elisp笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;&lt;b&gt;emacs/elisp笔记&lt;/b&gt;&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;emacs大杂烩&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1&quot;&gt;emacs各种设置与注意事项&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1-1&quot;&gt;emacs在英文系统的输入法问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-1-2&quot;&gt;交换Control\&lt;sub&gt;L与Capslocks&lt;/sub&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-2&quot;&gt;isearch的相关技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3&quot;&gt;ido-mode的快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-4&quot;&gt;dired的快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-5&quot;&gt;ibuffer的快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-6&quot;&gt;org-mode&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-6-1&quot;&gt;org-mode的快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-6-2&quot;&gt;Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-6-3&quot;&gt;dot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-7&quot;&gt;cua-mode以及矩形操作的快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-8&quot;&gt;mutiple cursors多光标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-9&quot;&gt;ace-jump-mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-10&quot;&gt;w3m&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-11&quot;&gt;我设置的快捷键以及我常用的快捷键，函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-12&quot;&gt;emacs导出pdf的中文支持&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-13&quot;&gt;emacs的奇淫技巧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;elisp学习笔记&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-2-1&quot;&gt;elisp基本语法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2&quot;&gt;常用的函数&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-1&quot;&gt;&lt;b&gt;lisp的基本语法&lt;/b&gt;&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-1-1&quot;&gt;list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-2&quot;&gt;&lt;b&gt;光标:&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-3&quot;&gt;&lt;b&gt;文本编辑：&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-4&quot;&gt;&lt;b&gt;字符串操作：&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-5&quot;&gt;&lt;b&gt;buffer相关：&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-6&quot;&gt;&lt;b&gt;file相关：&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-7&quot;&gt;&lt;b&gt;other useful function&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2-8&quot;&gt;&lt;b&gt;useful variable&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;b&gt;emacs/elisp笔记&lt;/b&gt;&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;emacs大杂烩&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;emacs各种设置与注意事项&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-1-1&quot;&gt;emacs在英文系统的输入法问题&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-1-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-bash&quot;&gt;mv /usr/bin/emacs /usr/bin/emacs.raw
gedit /usr/bin/emacs

#!/bin/sh
export LC_CTYPE=zh_CN.utf-8
/usr/bin/emacs.raw &quot;$@&quot;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-1-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-1-2&quot;&gt;交换Control\&lt;sub&gt;L与Capslocks&lt;/sub&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-1-2&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
通过 xev | grep &#39;keycode&#39;得到键码，然后输入以下文件: &lt;br /&gt;
remove Lock = Caps\&lt;sub&gt;Lock&lt;/sub&gt;&lt;br /&gt;
remove Control = Control\&lt;sub&gt;R&lt;/sub&gt;&lt;br /&gt;
keycode  66 = Control\&lt;sub&gt;R&lt;/sub&gt; NoSymbol Control\&lt;sub&gt;R&lt;/sub&gt;&lt;br /&gt;
keycode  105 = Caps\&lt;sub&gt;Lock&lt;/sub&gt; NoSymbol Caps\&lt;sub&gt;Lock&lt;/sub&gt;&lt;br /&gt;
add Lock = Caps\&lt;sub&gt;Lock&lt;/sub&gt;&lt;br /&gt;
add Control = Control\&lt;sub&gt;R&lt;/sub&gt;&lt;br /&gt;
保存为.xmodmap，然后运行xmodmap .xmodmap &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;isearch的相关技巧&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;p&gt;
C-x C-x:可以在isearch之后回到原来的位置
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-3&quot;&gt;ido-mode的快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-3&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
C-s C-r：在匹配的文件左右切换 &lt;br /&gt;
C-p    ：会启动部分匹配，而前面是严格的前缀匹配 &lt;br /&gt;
C-t    ：正则表达式匹配 eg:*.py$匹配所有python源文件 &lt;br /&gt;
M-up M-down：切换以前访问的目录 &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-4&quot;&gt;dired的快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-4&quot;&gt;
&lt;p&gt;
dired的标记方式有很多种，如标记删除（D标记，用于删除）， 如标记为*（m所做的标记就是*
标记），默认如果有被*标记的文件，那么所有的文件操作就是在这些标记的文
件上进行的，否则就在当前行代表的文件上进行操作，当然还可以有其他类型的
标记如t标记，k标记，只是这些标记没有快捷键，一般D标记和*标记用的多，其
他标记一般用于临时的转换一下。*c命令可以修改标记，eg：*c D t将D标记修
改为t标记，*c t *将t标记修改为*标记
&lt;/p&gt;
&lt;p class=&quot;verse&quot;&gt;
&quot;#&quot;: 标记所有自动保存的文件（D标记） &lt;br /&gt;
～：标记所有的备份文件（D标记） &lt;br /&gt;
&amp;amp;： 标记所有的垃圾文件(D标记) &lt;br /&gt;
d: mark D标记 &lt;br /&gt;
x：执行删除 &lt;br /&gt;
 &lt;br /&gt;
m: mark *标记 &lt;br /&gt;
t: 将所有*标记的文件变为未标记，所有未标记的变为*标记 &lt;br /&gt;
**：标记所有可执行文件 &lt;br /&gt;
*@：标记所有符号链接 &lt;br /&gt;
*s: 标记所有文件 &lt;br /&gt;
*/：标记所有目录（不包括. ..) &lt;br /&gt;
%m or *%: 正则匹配文件名 &lt;br /&gt;
%g：正则匹配所有文件的内容 &lt;br /&gt;
u: unmark &lt;br /&gt;
常用的文件操作： &lt;br /&gt;
U: unmark all &lt;br /&gt;
D: 立即删除 &lt;br /&gt;
R：rename &lt;br /&gt;
C：copy &lt;br /&gt;
A: 正则搜索 &lt;br /&gt;
Q：正则替换 &lt;br /&gt;
Z：解压文件 &lt;br /&gt;
L：把lisp文件加载进emacs &lt;br /&gt;
B：byte compile &lt;br /&gt;
O：chown &lt;br /&gt;
G：chgrp &lt;br /&gt;
M：chmod &lt;br /&gt;
+：create a directory &lt;br /&gt;
!: 可以显示打开文件的命令（对pdf等文件不要RET） &lt;br /&gt;
 &lt;br /&gt;
我设置的快捷键： &lt;br /&gt;
/ m n: 标记所有文件名匹配正则表达式的文件（mark name） &lt;br /&gt;
/ m e: 标记所有可执行文件                (mark executable files) &lt;br /&gt;
/ m d: 标记所有的目录                    (mark directory) &lt;br /&gt;
/ m c：标记所有内容匹配正则表达式的文件   (mark content) &lt;br /&gt;
/ m l: 标记所有符号链接                  (mark symlink) &lt;br /&gt;
/ m u: unmark all marks &lt;br /&gt;
/ /： unmark all marks &lt;br /&gt;
/ u: 将所有标记的文件的文件重命名为大写 &lt;br /&gt;
/ l：将所有标记的文件的文件重命名为小写 &lt;br /&gt;
/ c：change marks，和*c等价 &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-5&quot;&gt;ibuffer的快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-5&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
p：prev &lt;br /&gt;
n: next &lt;br /&gt;
m：mark &lt;br /&gt;
u: unmark &lt;br /&gt;
t: mark all &lt;br /&gt;
**: unmark all &lt;br /&gt;
x: kill the marked buffer or current buffer if no buffer marked &lt;br /&gt;
S: save the marked buffer or current buffer if no buffer marked &lt;br /&gt;
D: same as &#39;x&#39; &lt;br /&gt;
O: 在所有mark的buffer中正则搜索 &lt;br /&gt;
U: 在所有mark的buffer中替换 &lt;br /&gt;
Q: 在所有mark的buffer中query，replace &lt;br /&gt;
/m: 按主模式过滤 &lt;br /&gt;&lt;i&gt;n: 按名字过滤，可以只输入一部分 &lt;br /&gt;
/&lt;/i&gt;: 撤销过滤，全部显示 &lt;br /&gt;
/p: 多重过滤时撤销上一层过滤 &lt;br /&gt;
/f: 过滤filename，与/n类似 &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-6&quot;&gt;org-mode&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-6&quot;&gt;
&lt;p&gt;
org-mode是一个神器,有许多强大的功能
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-6-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-6-1&quot;&gt;org-mode的快捷键&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-6-1&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
org-w3m-copy-for-org-mode: 在w3m中可以带链接，图片拷贝到org中（先选中region） &lt;br /&gt;
tab，S-tab &lt;br /&gt;
C-c C-n: next tiltle &lt;br /&gt;
C-c C-p: prev tilte &lt;br /&gt;
C-c C-f: 平级的上一个标题 &lt;br /&gt;
C-c C-b：平级的下一个标题 &lt;br /&gt;
C-c C-u：上一级标题：next &lt;br /&gt;
M-RET : 插入同级标题 &lt;br /&gt;
M-S RET：插入一个同级的TODO标题 &lt;br /&gt;
M-LEFT/RIGHT: 标题升/降级 &lt;br /&gt;
M-S-LEFT/RIGHT：子树升/降级 &lt;br /&gt;
C-c*：将本行设置为标题 &lt;br /&gt;
C-c C-l: insert a link &lt;br /&gt;
C-c C-o: open a link &lt;br /&gt;
链接: &quot;【【link】【descripter】】&quot;（用英文的方括号） &lt;br /&gt;
org-mode能自动识别链接，如http，file等 &lt;br /&gt;
有序列表；1. 2. 3. &lt;br /&gt;
无序列表：*，+，-开头都可以 &lt;br /&gt;
注解的格式：方括号+数字，或者方括号+fn+数字 &lt;br /&gt;
            C-c C-c可以在注解与正文之间跳转 &lt;br /&gt;
(下面的格式，开头结尾必须都是空格或标点) &lt;br /&gt;
a.*…*: &lt;b&gt;粗体&lt;/b&gt; &lt;br /&gt;
b./…/: &lt;i&gt;斜体&lt;/i&gt; &lt;br /&gt;
c.+….+: &lt;del&gt;删除线&lt;/del&gt; &lt;br /&gt;
d.\_…\_: &lt;span class=&quot;underline&quot;&gt;下划线&lt;/span&gt; &lt;br /&gt;
下标：H&lt;sub&gt;2&lt;/sub&gt; O(会将\&lt;sub&gt;后的字符串加上下标，空格为截止符&lt;/sub&gt;) &lt;br /&gt;
上标：E=mc&lt;sup&gt;2&lt;/sup&gt; (同上) &lt;br /&gt;
 &lt;br /&gt;&lt;b&gt;内容元数据及其快捷键：&lt;/b&gt; &lt;br /&gt;
&amp;lt;v tab: begin\&lt;sub&gt;verse&lt;/sub&gt;   区域内换行 &lt;br /&gt;
&amp;lt;s tab: begin\&lt;sub&gt;src&lt;/sub&gt;     区域内为代码 按 *C-c C-&#39;* 进入主模式编辑，在按退出 &lt;br /&gt;
&amp;lt;e tab: begin\&lt;sub&gt;example&lt;/sub&gt; 例子，每行以：开始 &lt;br /&gt;
&amp;lt;q tab: begin\&lt;sub&gt;quote&lt;/sub&gt;   区域左右都会留出缩进，用于引用 &lt;br /&gt;
&amp;lt;c tab: begin\&lt;sub&gt;center&lt;/sub&gt;  居中区域 &lt;br /&gt;
&amp;lt;l tab: begin\&lt;sub&gt;latex&lt;/sub&gt;&lt;br /&gt;
&amp;lt;h tab: begin\&lt;sub&gt;html&lt;/sub&gt;    嵌入html &lt;br /&gt;
&amp;lt;a tab: begin\&lt;sub&gt;ascii&lt;/sub&gt;&lt;br /&gt;
 &lt;br /&gt;&lt;b&gt;表格：&lt;/b&gt; &lt;br /&gt;
在某一行的顶格输入‘|’，然后输入第一行第一列，在输入‘|’，接着第二行第二 &lt;br /&gt;
#列，依次类推，完成后tab，会将当前行对齐并为你创造表格的下一行，tab和 &lt;br /&gt;
#S-tab可以在表格中正向或者反向的移动，在表格的空白项中输入数字eg:&amp;lt;6&amp;gt;则 &lt;br /&gt;
#限定为6个字符长，多余的部分会隐藏，用C-c C-c可以展开 &lt;br /&gt;
 &lt;br /&gt;&lt;b&gt;TODO list：&lt;/b&gt; &lt;br /&gt;
在一个标题上按shift+left/right，C-c C-t可以设置todo list的状态 &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-6-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-6-2&quot;&gt;Babel&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-6-2&quot;&gt;
&lt;p&gt;
通过Babel,你可以直接在org-mode中运行各种编程语言的代码,每一个代码片段都组织为一个block,
可以向这个代码片段传递参数,同时每一个代码片段都可以产生输出,而这个输出又可以作为输入传递
给另一个代码片段,关于Babel的详细介绍可以看这篇官方的&lt;a href=&quot;http://orgmode.org/worg/org-contrib/babel/intro.html&quot;&gt;Instruction&lt;/a&gt; 与这篇&lt;a href=&quot;static/doc/babel.pdf&quot;&gt;pdf&lt;/a&gt; ,特别是后者,
建议认真看看,只有26页,Babel的基本结构分为数据块和代码块
数据块:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
#+name: &amp;lt;name&amp;gt;
&amp;lt;data block body&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
使用该数据时,直接引用&amp;lt;name&amp;gt;就好
代码块:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
#+name: &amp;lt;name&amp;gt;
#+headers: &amp;lt;header arguments&amp;gt;
#+begin_src &amp;lt;language&amp;gt; &amp;lt;header arguments&amp;gt;
 &amp;lt;body&amp;gt;
#+end_src
&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;name: 如果指定,那么最后得到结果就会赋给该变量,可以通过该变量将代码块的执行结果作为参数传递给其他代码块
&lt;pre class=&quot;example&quot;&gt;
#+name: ret1
#+BEGIN_SRC python :results output
print &#39;hello world&#39;
#+END_SRC

#+RESULTS: ret1
: hello world

#+BEGIN_SRC sh :var arg=ret1
echo $arg
#+END_SRC

#+RESULTS:
: hello world
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;language: 代码的类型,eg: C, cpp, python, ruby
&lt;/li&gt;
&lt;li&gt;header-arguments: 头部参数,头部参数可以放在两个地方:代码块的上方以及&amp;lt;language&amp;gt;后,常用的头部参数:
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;:results output(捕捉输出), :results value (default,捕捉最后一个表达式的结果,代码块当做一个函数)
&lt;/li&gt;
&lt;li&gt;:file aa.png (将输出存入文件,下面会加入链接,这对于输出是图片(eg:gunplot)时非常方便)
&lt;/li&gt;
&lt;li&gt;:dir ~/Documents (将~/Documents 作为运行代码的进程的当前目录)
&lt;pre class=&quot;example&quot;&gt;
#+headers: :dir ~/Documents/blog
#+BEGIN_SRC sh
echo $PWD
#+END_SRC

#+RESULTS:
: /home/yangyu/Documents/blog
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;:var n=5 (传递一个变量n给code block,并且其值为5)
&lt;/li&gt;
&lt;li&gt;:exports both (输出code与results), :exports code(默认), :exports results, :exports none
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
现在我放入几个例子:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-6-3&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-6-3&quot;&gt;dot&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-6-3&quot;&gt;
&lt;p&gt;
dot语言可以用来画流程图，和Babel结合起来非常方便，这是一份dot语言的&lt;a href=&quot;static/doc/dotguide.pdf&quot;&gt;guide&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-7&quot;&gt;cua-mode以及矩形操作的快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-7&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
enable: M-x cua-mode &lt;br /&gt;
C-RET: 激活矩形操作，然后就可以常规移动光标来进行列编辑 &lt;br /&gt;
C-v  : past rectangle &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-8&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-8&quot;&gt;mutiple cursors多光标&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-8&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;C-&amp;lt;: mc/mark-previous-like-this
&lt;/li&gt;
&lt;li&gt;C-&amp;gt;: mc/mark-next-like-this
&lt;/li&gt;
&lt;li&gt;C-c &amp;lt;: mc/mark-all-like-this (上面三项功能以word为单位，必须先mark-word)
&lt;/li&gt;

&lt;li&gt;C-c c a:在所有行的开头加入光标
&lt;/li&gt;
&lt;li&gt;C-c c e:在所有行的结尾加入光标
&lt;/li&gt;
&lt;li&gt;C-c c c:在所有的行加入一个光标(上面的三项功能以行为单位，必须先mark数行)
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-9&quot;&gt;ace-jump-mode&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-9&quot;&gt;
&lt;p&gt;
类似于火狐的vim插件，输入一个head char，就会在所有匹配的地方放入一个字母
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;C-; ：ace-jump-char-mode
&lt;/li&gt;
&lt;li&gt;C-: : ace-jump-word-mode
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-10&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-10&quot;&gt;w3m&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-10&quot;&gt;
&lt;p&gt;
w3m 是一个文本浏览器，它不支持CSS与js，非常适合浏览文本很多的页面，以及避免
在emacs与firefox切换带来的烦恼。。
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;links&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;g: Prompt for a url in minibuffer (w3m-browse-url)
&lt;/li&gt;
&lt;li&gt;G: same as &lt;b&gt;g&lt;/b&gt; excepte it open a new session(a new tab)
&lt;/li&gt;
&lt;li&gt;R: reload the page
&lt;/li&gt;
&lt;li&gt;S: search engion
&lt;/li&gt;
&lt;li&gt;H: goto home page
&lt;/li&gt;
&lt;li&gt;u: display the under the point in the echo area
&lt;/li&gt;
&lt;li&gt;RET: Display the page pointed by the link under point (w3m-view-this-url)
&lt;/li&gt;
&lt;li&gt;[: move point to previous form
&lt;/li&gt;
&lt;li&gt;]: move point to next form
&lt;/li&gt;
&lt;li&gt;TAB: move point to next link
&lt;/li&gt;
&lt;li&gt;M-TAB, S-TAB: move point to previous link
&lt;/li&gt;
&lt;li&gt;d: download thee url under the point
&lt;/li&gt;
&lt;li&gt;M-d: Download the url
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
&lt;b&gt;scroll&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;SPC: scroll downwards
&lt;/li&gt;
&lt;li&gt;&amp;gt;: scroll to the right
&lt;/li&gt;
&lt;li&gt;&amp;lt;: scroll to the left
&lt;/li&gt;
&lt;li&gt;DEL: scroll upwards
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
&lt;b&gt;bookmarks&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;v: show all bookmarks
&lt;/li&gt;
&lt;li&gt;a: add current url to bookmarks
&lt;/li&gt;
&lt;li&gt;M-a: Add the url under point to the bookmark.
&lt;/li&gt;
&lt;li&gt;C-k: kill a bookmark
&lt;/li&gt;
&lt;li&gt;E: edit bookmark
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
&lt;b&gt;move in page&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;hjkl: like vim
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
&lt;b&gt;switch tabs&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;C-c C-n: next tab
&lt;/li&gt;
&lt;li&gt;C-c C-p: previous tab
&lt;/li&gt;
&lt;li&gt;C-c C-t: new tab
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
&lt;b&gt;images&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;I: Display the image under point in the external viewer.
&lt;/li&gt;
&lt;li&gt;M-i: Save the image under point to a file.
&lt;/li&gt;
&lt;li&gt;t: Toggle the visibility of an image under point
&lt;/li&gt;
&lt;li&gt;T: Toggle the visibility of all images
&lt;/li&gt;
&lt;li&gt;M-T: turn off to display all images
&lt;/li&gt;
&lt;li&gt;M-[: zoom in an image on the point
&lt;/li&gt;
&lt;li&gt;M-]: zoom out an image on the point
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-11&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-11&quot;&gt;我设置的快捷键以及我常用的快捷键，函数&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-11&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
C-x C-m: 替代M-x,按M很别扭 &lt;br /&gt;
M-u : upcase-word &lt;br /&gt;
M-c : capticalize-word &lt;br /&gt;
M-l : downcase-word(将行上下移动，如果选定则移动buffer) &lt;br /&gt;
C-c p: 复制粘贴一行 &lt;br /&gt;
M-up: Shift lines up &lt;br /&gt;
M-down: Shift lines down &lt;br /&gt;
M-x occur: 创建一个新的buffer，然后将当前buffer，所有匹配regex的内容显示其中,进入该buffer，enter就可以跳转 &lt;br /&gt;
M-x imenu：可以根据类型跳转（变量，函数,include等等） &lt;br /&gt;
C-k: kill the current line &lt;br /&gt;
C-o: new line and indent,like the &#39;o&#39; in vim &lt;br /&gt;
M-;: comment or uncomment the region &lt;br /&gt;
C-c C-c: same as  M-; &lt;br /&gt;
C-/: undo (same as C-x u and C-\_) &lt;br /&gt;
C-c d: translate the word using sdcv &lt;br /&gt;
C-c f: 迭代的搜索字符，eg：C-c f g会移到第一个g，在按g移到 &lt;br /&gt;
       第二个g &lt;br /&gt;
%  : jump to the matched parenthesis &lt;br /&gt;
C-c -: fold the code &lt;br /&gt;
C-c =: unfold the code &lt;br /&gt;
C-M-f: 表达式的首部 &lt;br /&gt;
C-M-b: &lt;br /&gt;
C-M-a: 函数的首部 &lt;br /&gt;
C-M-e： &lt;br /&gt;
C-x backspace: 删除到行首 &lt;br /&gt;
C-M-h: 标记一个函数 &lt;br /&gt;
M-u: 一个字改为大写 &lt;br /&gt;
M-l：一个字改为小写 &lt;br /&gt;
C-x C-u：region to uppercase &lt;br /&gt;
C-x C-l：区域小写 &lt;br /&gt;
C-t：将光标前后的字符交换 &lt;br /&gt;
C-x C-t: 光标所在行与上一行交换 &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-12&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-12&quot;&gt;emacs导出pdf的中文支持&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-12&quot;&gt;
&lt;p&gt;
org-mode默认的导出系统对中文支持不好,我参考这篇&lt;a href=&quot;http://yzprofile.me/2013/01/14/emacs-org-mode-xelatex.html&quot;&gt;文章&lt;/a&gt;, 将导出中文pdf的方法总结如下:
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;安装textlive,如果是ubuntu,运行以下命令:
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-sh&quot;&gt;sudo apt-get install texlive texlive-xetex textlive-latex-extra
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
textlive-latex-extra一定要装,不装会有File `wrapfig.sty&#39; not found.的错误
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;在emacs配置文件中添加
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;org-mode &amp;lt; 8.0&lt;/span&gt;
(setq org-latex-to-pdf-process &#39;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;xelatex -interaction nonstopmode %f&quot;&lt;/span&gt;
                                 &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;xelatex -interaction nonstopmode %f&quot;&lt;/span&gt;))
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;  &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;org-mode 8.0&lt;/span&gt;
(setq org-latex-pdf-process &#39;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;xelatex -interaction nonstopmode %f&quot;&lt;/span&gt;
                              &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;xelatex -interaction nonstopmode %f&quot;&lt;/span&gt;))
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;在org文档的开头部分添加:
&lt;pre class=&quot;example&quot;&gt;
#+LATEX_HEADER: \usepackage{xeCJK}
#+LATEX_HEADER: \setCJKmainfont{SimSun}
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-13&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-13&quot;&gt;emacs的奇淫技巧&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-13&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
M-x flush-lines RET ^$ RET :删除所有的空行（正则匹配） &lt;br /&gt;
绑定快捷键时用C-h k查询得到的内容可以直接放在kbd后 &lt;br /&gt;
indent-region可以格式化所有的代码 &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;elisp学习笔记&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-2-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-1&quot;&gt;elisp基本语法&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;help: + M-x apropos (find symbol)
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;C-h k(descripte key)
&lt;/li&gt;
&lt;li&gt;C-h f (function)
&lt;/li&gt;
&lt;li&gt;C-h v (variable)
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;control flow
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;if
&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-lisp&quot;&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; test
    a
  b)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;test is the condition&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
logical expression
   the function &lt;b&gt;or&lt;/b&gt; works like the logical &quot;or&quot; in most languages:
   if all the arguments are false, it return nil, otherwith it will
   return the value of the last argument whose value is non-nil.
   eg: (or nil nil 3 2 1) return 3 (not t)
   so (if a a b) is identical to (or a b)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;let
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-lisp&quot;&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;let&lt;/span&gt; ((val1 value1)
      (val2 value2))
  body)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;lists
car
cdr
cons
list: (list &#39;a &quot;b&quot; 1) ==&amp;gt; (a &quot;b&quot; 1)
append: (append &#39;(a b) &#39;(c d)) ==&amp;gt; (a b c d)
reverse: (reverse &#39;(a b c d)) ==&amp;gt; (d c b a)
nthcdr: call cdr n times
length: get the length of the list
mapcar:
equal: only test the object&#39;s structure and content
eq: test if the two arguments is the same object
assoc: 当list类似于关联数组时，用key来寻找value，用equal测试key
assq： 与assoc相似，只是用eq测试key

&lt;p&gt;
setcar: change the car-element of the list
setcdr: change the cdr-element of the list
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-2&quot;&gt;常用的函数&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-2-2-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-1&quot;&gt;&lt;b&gt;lisp的基本语法&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-2-2-1-1&quot; class=&quot;outline-6&quot;&gt;
&lt;h6 id=&quot;sec-1-2-2-1-1&quot;&gt;list&lt;/h6&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-1-2-2-1-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;property list
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;(setq alist &#39;(&lt;span style=&quot;color: #94bff3;&quot;&gt;:publish-dir&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;~/Documents&quot;&lt;/span&gt; &lt;span style=&quot;color: #94bff3;&quot;&gt;:base-dir&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;~/Documents/note&quot;&lt;/span&gt;))
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;(plist-get alist &lt;span style=&quot;color: #94bff3;&quot;&gt;:base-dir&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;assoc list
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-2-2-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-2&quot;&gt;&lt;b&gt;光标:&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-2&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-elisp&quot;&gt;(region-beginning)
(region-end)
(point-max)
(point-min)
(buffer-end)
(beginning-of-line)
(end-of-line)

(goto-char 293)
(forward-char n)
(backward-char n)
(skip-chars-forward &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;\n\t&quot;&lt;/span&gt;)
(skip-chars-backward &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;\n\t&quot;&lt;/span&gt;)

(forward-line n)
(backward-line n)

(looking-at regex)  &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return t if text after the point match the REGEXP&lt;/span&gt;
(looking-back regex)

(search-forward my-str)
(search-backward my-str)
(re-search-forward my-regex)
(re-search-backward my-regex)
(replace-match)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2-3&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-3&quot;&gt;&lt;b&gt;文本编辑：&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-3&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-lisp&quot;&gt;(delete-char 9)
(delete-region start-pos end-pos)
(insert &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;hello world&quot;&lt;/span&gt;)
(buffer-substring start-pos end-pos) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;从buffer中获得字符串&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2-4&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-4&quot;&gt;&lt;b&gt;字符串操作：&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-4&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-lisp&quot;&gt;(length &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;abc&quot;&lt;/span&gt;)   &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return 3&lt;/span&gt;
(substring &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;hello world&quot;&lt;/span&gt; 1 3) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return &quot;ell&quot;&lt;/span&gt;
(replace-regexp-in-string regex replace str)  &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;正则替换&lt;/span&gt;
(string-match regex str) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return the index first match the regex in str&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2-5&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-5&quot;&gt;&lt;b&gt;buffer相关：&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-5&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-lisp&quot;&gt;(buffer-name)
(buffer-file-name)  &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;full name&lt;/span&gt;
(set-buffer name)
(save-buffer)
(kill-buffer BufferName)
(kill-this-buffer)
(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;with-current-buffer&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2-6&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-6&quot;&gt;&lt;b&gt;file相关：&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-6&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-lisp&quot;&gt;(find-file path)  &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;open a file&lt;/span&gt;
(write-file path) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;save the file&lt;/span&gt;
(insert-file-contents path) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;将指定文件内容插入当前位置&lt;/span&gt;
(append-to-file start-pos end-pos path)
(rename-file old-name new-name)
(copy-file file-name new-name)
(delete-file file-name)
(file-name-directory full-path) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;路径（不包含文件名）&lt;/span&gt;
(file-name-nodirectory full-path) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;文件名（不包含路径）&lt;/span&gt;
(file-name-extension file-name)  &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;后缀,一般时扩展名&lt;/span&gt;
(file-name-sans-extension &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;/hello/abc.html&quot;&lt;/span&gt;) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return &quot;/hello/abc&quot;,只去掉后缀&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2-7&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-7&quot;&gt;&lt;b&gt;other useful function&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;save-excursion&lt;/span&gt;)   &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;保存并恢复当前point&lt;/span&gt;
(interactive)      &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;function is a command&lt;/span&gt;
(thing-at-point THING) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;THING can be &#39;word&#39; &#39;line&#39; &#39;sentence&#39; &#39;list&#39;&lt;/span&gt;
                       &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;and so on&lt;/span&gt;
(thing-at-point &#39;word)
(thing-at-point &#39;sexp)
(current-time-string) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;返回当前时间字符串&lt;/span&gt;
(format-time-string &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;%1.%M %p&quot;&lt;/span&gt; (current-time))
(symbol-name &#39;sym)                      &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;conmvert symbol to string&lt;/span&gt;
(intern &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;sym&quot;&lt;/span&gt;)                          &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;convert string to symbol&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2-8&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-2-2-8&quot;&gt;&lt;b&gt;useful variable&lt;/b&gt;&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-2-2-8&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
mark-active
last-command
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>linux-c-garbled-characters.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/linux-c-garbled-characters.html"/>
    <title>Linux平台C语言乱码</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;Linux平台C语言乱码&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;文件加载到显示的过程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;文件加载到显示的过程&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
只要是用过linux的人都应该遇到过乱码的问题，众所周知，乱码的产生的主要原因是编
码的问题，以B编码方式去读取以A编码方式编码的文件时就会产生乱码，文件读取到显示
的过程可以简单的用下图表表示：
&lt;/p&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;static/img/how-to-show-file.png&quot; alt=&quot;how-to-show-file.png&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;第一步是将文件读入内存，这一步可以看作是直接将文件的二进制形式的表示直接复制
进内存，就是将你用十六进制工具看到的那些东西复制进内存，
&lt;/li&gt;
&lt;li&gt;第二步是显示终端将内存中的数据以某种编码方式解码显示出来
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
在linux下这种显示终端的默认编码方式一般是utf8，windows则是gb2312，从这里可以看出，在linux下要不产生乱码，必须
让内存中的二进制数据是对原始信息通过utf8编码得到的，那么如何保证这一点呢，有
两种方式，一种是让文件本身是utf8编码的，这样读入内存后在以utf8解码后得到的信
息肯定一样，也就是不会有乱码，第二种是直接在内存中转换，假设我读一个以gb2312
编码的文件，在内存中得到一个缓冲区buf，如果你直接将buf传送给显示终端的话，那
么显示终端就会以utf8对buf的二进制数据解码，那么就会产生乱码，因为buf的二进制
数据是以gb2312对原始信息编码得到的，这就是为什么很多windows创建的文件在linux
读取时会乱码，那么我要正常显示，则必须将buf中的二进制数据转换为将原始信息以utf8
编码得到的二进制信息，这里分两种情况讨论:
&lt;/p&gt;

&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;文本文件的编码格式是utf8，这种情况可以直接用c语言读取显示，不会产生乱码，
所以不过多赘述
&lt;/li&gt;
&lt;li&gt;文本文件的编码是gb2312，那么直接用C语言操作时就会产生乱码，这种情况的解决方
式主要有两种，第一种就是运行程序之前将要操作的文本文件转换为utf8，打开shell，
输入以下命令:
iconv -f gb2312 -t utf8 youfile -c -o newfile
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
其中youfile是要转换的文件，newfile就是得到的utf8编码的文件，其中c这个参数建议加上，
它可以忽略无效的字符，比如可以忽略utf8文件里的BOM，下面贴一段转换歌词编码的脚本给大
家参考:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-sh&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;for&lt;/span&gt; i&lt;span style=&quot;color: #FBDE2D;&quot;&gt; in&lt;/span&gt; *.lrc
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;    &lt;span style=&quot;color: #FF6400;&quot;&gt;is_utf8&lt;/span&gt;=$(&lt;span style=&quot;color: #fa8072;&quot;&gt;file&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;$i&quot;&lt;/span&gt; | grep &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;UTF-8&#39;&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; [ -z &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;$is_utf8&quot;&lt;/span&gt; ]
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;        iconv -f gb2312 -t utf8 &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;$i&quot;&lt;/span&gt; -c -o tmp_lrc &amp;amp;&amp;amp; rm -f &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;$i&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;        mv tmp_lrc &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;$i&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;        &lt;span style=&quot;color: #FBDE2D;&quot;&gt;continue&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
功能就是将一个目录里扩展名为lrc的文件编码转换为utf8
&lt;/p&gt;

&lt;p&gt;
这种方式有个弊端就是文件必须提前转换编码，如果程序是给别人使用，我们不可能要求别
人先将文件的编码转换好在运行程序，那么有没有什么办法可以直接在C程序里进行转换呢？
下面就看看如何在程序中进行转换，先看代码:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-C&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;&amp;lt;iconv.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;#define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;MAXLINE&lt;/span&gt; 1024
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;&lt;span style=&quot;color: #8DA6CE;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;main&lt;/span&gt;()
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;FILE&lt;/span&gt; *&lt;span style=&quot;color: #FF6400;&quot;&gt;fp&lt;/span&gt; = fopen(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;she.lrc&quot;&lt;/span&gt;,&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;r&quot;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;buf&lt;/span&gt;[MAXLINE];
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;dest&lt;/span&gt;[MAXLINE];
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; *&lt;span style=&quot;color: #FF6400;&quot;&gt;in&lt;/span&gt; = buf;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; *&lt;span style=&quot;color: #FF6400;&quot;&gt;out&lt;/span&gt; = dest;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;    fgets(buf,MAXLINE,fp);
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;iconv_t&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;cd&lt;/span&gt; = iconv_open(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;,&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;GBK&quot;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;lenght&lt;/span&gt; = MAXLINE;
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;    iconv(cd,&amp;amp;in,&amp;amp;lenght,&amp;amp;out,&amp;amp;lenght)
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;    iconv_close(cd);
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;    fputs(dest,stdout);
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;    printf(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;\n&quot;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;return&lt;/span&gt; 0;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
上面的程序只是为了测试，所以有些错误处理代码去掉了，其中she.lrc是一个以gb2312编码
的歌词文件，用到了3个函数，icon&lt;sub&gt;open&lt;/sub&gt;,iconv,icon&lt;sub&gt;close&lt;/sub&gt;,这三个函数是libiconv库的接
口，这三个函数的详细介绍清参考:
&lt;a href=&quot;http://www.gnu.org/savannah-checkouts/gnu/libiconv/documentation/libiconv-1.13/iconv_open.3.html&quot;&gt;ICONV&lt;sub&gt;OPEN&lt;/sub&gt;&lt;/a&gt;
&lt;a href=&quot;http://www.gnu.org/savannah-checkouts/gnu/libiconv/documentation/libiconv-1.13/iconv.3.html&quot;&gt;ICONV&lt;/a&gt;
&lt;a href=&quot;http://www.gnu.org/savannah-checkouts/gnu/libiconv/documentation/libiconv-1.13/iconv_close.3.html&quot;&gt;ICONV&lt;sub&gt;CLOSE&lt;/sub&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
这三个函数的帮助文档也可以直接man，很详细，使用的顺序也是先调
用iconv&lt;sub&gt;open创建描述符，然后调用iconv转换，最后调用iconv&lt;/sub&gt;&lt;sub&gt;close&lt;/sub&gt;
关闭描述符，函数原型为：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-C&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;&lt;span style=&quot;color: #8DA6CE;&quot;&gt;iconv_t&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;iconv_open&lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; *&lt;span style=&quot;color: #FF6400;&quot;&gt;tocode&lt;/span&gt;, &lt;span style=&quot;color: #FBDE2D;&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; *&lt;span style=&quot;color: #FF6400;&quot;&gt;fromcode&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;&lt;span style=&quot;color: #8DA6CE;&quot;&gt;size_t&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;iconv&lt;/span&gt;(&lt;span style=&quot;color: #8DA6CE;&quot;&gt;iconv_t&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;cd&lt;/span&gt;,
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;                    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; **&lt;span style=&quot;color: #FF6400;&quot;&gt;inbuf&lt;/span&gt;, &lt;span style=&quot;color: #8DA6CE;&quot;&gt;size_t&lt;/span&gt; *&lt;span style=&quot;color: #FF6400;&quot;&gt;inbytesleft&lt;/span&gt;,
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;                    &lt;span style=&quot;color: #8DA6CE;&quot;&gt;char&lt;/span&gt; **&lt;span style=&quot;color: #FF6400;&quot;&gt;outbuf&lt;/span&gt;, &lt;span style=&quot;color: #8DA6CE;&quot;&gt;size_t&lt;/span&gt; *&lt;span style=&quot;color: #FF6400;&quot;&gt;outbytesleft&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;5: &lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;iconv_close&lt;/span&gt;(&lt;span style=&quot;color: #8DA6CE;&quot;&gt;iconv_t&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;cd&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
其中fromcode和tocode是编码方式，shell下输入iconv –list会列出支持的编码方式。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>funny-video.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/funny-video.html"/>
    <title>My Favourite Videos</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;My Favourite Videos&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;搞笑视频&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;臣妾做不到&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-2&quot;&gt;天文&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-2-1&quot;&gt;旅行到宇宙的边缘&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;搞笑视频&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;臣妾做不到&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;!-- &lt;iframe height=498 width=510 src=&quot;http://player.youku.com/embed/XNTU2ODM4MTI0&quot; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;embed src=&quot;http://player.56.com/v_OTE2MTM0MDI.swf&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;480&quot; height=&quot;405&quot; allowfullscreen=&quot;true&quot; allownetworking=&quot;all&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/embed&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-2&quot;&gt;天文&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-2-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-2-1&quot;&gt;旅行到宇宙的边缘&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;embed src=&quot;http://player.56.com/v_OTEyNTM4NDg.swf&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;480&quot; height=&quot;405&quot; allowfullscreen=&quot;true&quot; allownetworking=&quot;all&quot; allowscriptaccess=&quot;always&quot;&gt;&lt;/embed&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>php.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/php.html"/>
    <title>PHP笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;PHP笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;php 笔记&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;变量&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1&quot;&gt;变量的命名与注意事项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-2&quot;&gt;作用域&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;操作符与控制结构&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-2-1&quot;&gt;操作符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2&quot;&gt;控制结构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;php数组&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-3-1&quot;&gt;数组定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-2&quot;&gt;循环访问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-3&quot;&gt;数组排序（原地改变数组）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-4&quot;&gt;其它数组函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-4&quot;&gt;字符串处理函数&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-4-1&quot;&gt;常规字符串处理函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-4-2&quot;&gt;正则表达式函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-5&quot;&gt;文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-6&quot;&gt;function&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-6-1&quot;&gt;定义&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-7&quot;&gt;OOP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-8&quot;&gt;php与数据库（mysql）&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-8-1&quot;&gt;示例代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9&quot;&gt;MySQL&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-9-1&quot;&gt;数据库设计的三大范式：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-2&quot;&gt;数据库的常用模式&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-9-2-1&quot;&gt;主扩展模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-2-2&quot;&gt;主从模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-2-3&quot;&gt;名值模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-2-4&quot;&gt;多对多模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3&quot;&gt;常用的SQL代码&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-1&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-2&quot;&gt;增加新用户&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-3&quot;&gt;Select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-4&quot;&gt;insert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-5&quot;&gt;update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-6&quot;&gt;delete（删除行）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-7&quot;&gt;create database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-8&quot;&gt;create  table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-9&quot;&gt;Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-10&quot;&gt;Drop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-11&quot;&gt;Alert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-9-3-12&quot;&gt;从文件创建：mysql –u root &amp;lt;file.sql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-10&quot;&gt;其它技巧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;php 笔记&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
php是一门流行的web开发语言,以上手简单著称
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;变量&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;变量的命名与注意事项&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;变量必须要$符号，和perl类似.
&lt;/li&gt;
&lt;li&gt;常量用define定义，常量使用时不需要$符号，eg: define(“const\&lt;sub&gt;var”&lt;/sub&gt;, 100),使用时直接用const\&lt;sub&gt;var不需要引号与&lt;/sub&gt;$。
&lt;/li&gt;
&lt;li&gt;大小写：php的变量与常量区分大小写，而函数名，类名，方法名不区分大小写。
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;作用域&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;超全局变量
&lt;/li&gt;
&lt;li&gt;常量：一旦声明在脚本内全局可用，函数内外可用
&lt;/li&gt;
&lt;li&gt;全局变量，脚本内全局可用，但是函数内不可用，可用global关键词
&lt;/li&gt;
&lt;li&gt;函数内静态变量，和C语言相似
&lt;/li&gt;
&lt;li&gt;函数局部变量和C语言相似
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;操作符与控制结构&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-2-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-1&quot;&gt;操作符&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-1&quot;&gt;
&lt;p&gt;
php的运算符基本和c语言类似。有一个===与==这个和js类似，一个类型与值都比较，一个只比较值。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-2&quot;&gt;控制结构&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-2&quot;&gt;
&lt;p&gt;
php的控制结构与C语言类似，if，switch，while，do…..while循环，for循环，多了一个foreach，foreach是专门用于数组的，break和continue的作用于C类似，还有一个exit可以直接结束php脚本的运行，执行错误检测时exit比较有用。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;php数组&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;p&gt;
php数组是一个强大的数据结构
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-3-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-1&quot;&gt;数组定义&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;$arr = array（’a’, ‘b’, ‘c’）
&lt;/li&gt;
&lt;li&gt;$arr = array(‘first’=&amp;gt;’a‘，‘second’ =&amp;gt; ‘b’, ‘third’ =&amp;gt;’c’),
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
前一种的索引是0,1,2后者的索引是’first’,’second’,’third’，后一种方式和python的字典差不多。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-2&quot;&gt;循环访问&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;foreach循环：foreach（$arr as $value）,
        foreach($arr as $key=&amp;gt;$value),
前一种方式只获得value，后一种获得key，value,foreach每次在运行之前都会将数组指针自动重置到数组开头，所以不需要使用reset函数。
&lt;/li&gt;
&lt;li&gt;while(list($key, $value) = each($arr))，
each：返回数组中当前的 键／值对并将数组指针向前移动一步，each返回的也是一个数组，list会将数组中索引为0,1,2…….对应的值依次赋给list的参数，注意索引只能是数字，不能是字符串，list的作用就是将数组的值赋给list指定的变量，注意：数组对应的key必须是0,1,2,3…………….,这种循环方式需要使用reset函数
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-3-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-3&quot;&gt;数组排序（原地改变数组）&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;sort（对普通数组排序 ，不要应用于字典数组，因为它返回的排序数组会抹掉原字典数组的key，而将它的key变为0,1,2……）
&lt;/li&gt;
&lt;li&gt;asort（对字典数组的value排序）
&lt;/li&gt;
&lt;li&gt;ksort（对字典数组的key排序），
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
对应的反向（降序）排序rsort，arsort，krsort。Shuffle（随机排序），array&lt;sub&gt;reverse（反向排列）&lt;/sub&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-3-4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-4&quot;&gt;其它数组函数&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-4&quot;&gt;
&lt;p&gt;
current（当前数组内部指针指向的元素，pos是current的别名）
next（下一个元素的值）
prev（前一个元素的值）
end（内部指针重置到数组末尾，并返回末尾元素的值）
reset（内部指针重置到开头，并返回开头元素的值
array&lt;sub&gt;walk（对数组的每个元素应用一个自定义函数，如果要改变数组本身，则自定义函数，必须传引用）&lt;/sub&gt;
count，sizeof（都返回数组的元素个数）
array&lt;sub&gt;count&lt;/sub&gt;&lt;sub&gt;values（返回数组元素中各个值出现的频率）&lt;/sub&gt;
extract（创建一系列以数组的key为名称的变量，而且这些变量的值是对应的value）。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-4&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-4&quot;&gt;字符串处理函数&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;p&gt;
不原地改变，而是返回一个新的结果字符串
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-4-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-4-1&quot;&gt;常规字符串处理函数&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-4-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;trim(ltrim,rtrim(别名chop)：删除字符串的首尾两端的空格。ltrim只删除开头的空格，rtrim只删除结尾的空格。
&lt;/li&gt;
&lt;li&gt;nl2br: 将字符串中的\n转换为,&amp;lt;br /&amp;gt;标签，这样可以在html中换行。
&lt;/li&gt;
&lt;li&gt;printf,sprintf:格式化输出。
&lt;/li&gt;
&lt;li&gt;strtolower（全部小写）,strtoupper（全部大写）,ucfirst（第一个字母大写）,ucwords（所有词的第一个字母大写）。
&lt;/li&gt;
&lt;li&gt;addslashes，stripslashes:将引号，反斜杠，NULL字符字符转义，以免在存入数据库时被当做控制字符，前者是添加，后者是删除，前者在存入数据库前调用，后者在从数据库取出数据后调用。
&lt;/li&gt;
&lt;li&gt;explode，implode（join）：前者分割字符串成数组，后者将数组合成字符串，都需要知道分隔符，join是implode的别名。
&lt;/li&gt;
&lt;li&gt;strtok：一次只会返回分割得到的一个字符串，而不是像explode那样返回数组
&lt;/li&gt;
&lt;li&gt;substr：指定开始与结尾来得到一个指定字符串的子字符串。
&lt;/li&gt;
&lt;li&gt;字符串的比较：strcmp，strcasecmp（前者区分大小写，后者不区分，是字典序比较，故‘2‘&amp;gt;’12’）,strnatcmp,strnatcasecmp(按自然序比较，故’12’&amp;gt;’2’).
&lt;/li&gt;
&lt;li&gt;strlen：字符串的长度。
&lt;/li&gt;
&lt;li&gt;查找子字符串：strstr（strchr 是strstr的别名，strstr区分大小写，stristr不区分大小写,都返回子字符串第一次出现的位置到结尾形成的字符串），strrchr(返回子字符串最后一次出现的位置到结尾形成的字符串)
&lt;/li&gt;
&lt;li&gt;查找子字符串的位置：strpos，strrpos
&lt;/li&gt;
&lt;li&gt;替换子字符串：str\&lt;sub&gt;replace，substr\&lt;/sub&gt;&lt;sub&gt;replace&lt;/sub&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-4-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-4-2&quot;&gt;正则表达式函数&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-4-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;ereg（eregi不区分大小写）：搜索一个匹配，可以使用子模式。
&lt;/li&gt;
&lt;li&gt;ereg\&lt;sub&gt;replace&lt;/sub&gt;,eregi\&lt;sub&gt;replace：替换&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;split：用指定的模式将字符串分割为一个数组

&lt;p&gt;
&lt;b&gt;以上的函数是POSIX正则表达式，而php5.3被废弃，全部采用perl兼容的正则表达式，主要函数如下：&lt;/b&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Preg\&lt;sub&gt;match&lt;/sub&gt;:搜索给定模式的一个匹配，可以将该匹配按子模式分割成数组返回，其中【0】是完整的匹配，【1】是第一个子模式的匹配，以此类推。
&lt;/li&gt;
&lt;li&gt;Preg\&lt;sub&gt;match\&lt;/sub&gt;&lt;sub&gt;all：搜索所有给定模式的匹配，返回一个多维数组，该多维数组会包含所有的完整匹配以及子模式匹配，数组的组织形式由flag参数指定。&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;Preg\&lt;sub&gt;grep&lt;/sub&gt;:搜索一个给定的数组
&lt;/li&gt;
&lt;li&gt;Preg\&lt;sub&gt;replace&lt;/sub&gt;:替换。
&lt;/li&gt;
&lt;li&gt;Preg\&lt;sub&gt;split&lt;/sub&gt;:分割为数组。
Perl正则表达式和POSISX表达式的区别：perl正则表达式的模式需要分隔符，分隔符放在pattern的开头和结尾，可以使/,#,~等，没有专门为区分大小写编写对应的函数，而是使用模式修饰符，模式修饰符放在pattern的分隔符的后面，主要有i（不区分大小写）s（点号匹配换行符）U逆转贪婪模式，perl从第一个合法匹配后停止，而且是贪婪模式。
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-5&quot;&gt;文件&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-5&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;Fopen：打开文件，为了移植性模式应该加上b。可以打开网络上的远程文件。
&lt;/li&gt;
&lt;li&gt;Fwrite（fputs是fwrite的别名）：写文件
&lt;/li&gt;
&lt;li&gt;File\&lt;sub&gt;put\&lt;/sub&gt;&lt;sub&gt;contents&lt;/sub&gt;:可以在不使用fopen的情况下写入文件
&lt;/li&gt;
&lt;li&gt;Fgets,fgetss,fgetcsv:读取文件的一行数据，fgetss会去掉读出的行中的php与html标签，fgetcsv可以将读出的行分割为数组返回。
&lt;/li&gt;
&lt;li&gt;Readfile，file，fpassthru：读取整个文件。Readfile是向标准输出显示，file是读入一个数组。
&lt;/li&gt;
&lt;li&gt;Fgetc：读入一个字符，会显示EOF结束符，所以需要检查。
&lt;/li&gt;
&lt;li&gt;Fread：读入任意字节的字符串。
&lt;/li&gt;
&lt;li&gt;File\&lt;sub&gt;get\&lt;/sub&gt;&lt;sub&gt;contents：在不使用fopen的情况下直接从文件读。&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;File\&lt;sub&gt;exists：文件是否存在。&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;Filesize：文件的大小。
&lt;/li&gt;
&lt;li&gt;Unlink：删除文件。
&lt;/li&gt;
&lt;li&gt;Rewind，fseek，ftell：rewind复位到文件开头，fseek文件中定位，ftell目前文件指针的位置。
&lt;/li&gt;
&lt;li&gt;Flock：文件锁定。
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-6&quot;&gt;function&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-6&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-6-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-6-1&quot;&gt;定义&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-6-1&quot;&gt;
&lt;p&gt;
function  func&lt;sub&gt;name&lt;/sub&gt;($a, $b….)
{ your code }
可以使用默认参数，方法是在形参后加=，eg：上例 $b = 1
函数使用return和C语言类似
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-7&quot;&gt;OOP&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-php&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;var&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;attribute1&lt;/span&gt;; &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;这个类实例的属性，不是类本身的属性，不要和python弄混了。默认公有&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;public&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;attribute2&lt;/span&gt;;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;指定public，private后最好省掉var&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;private&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;attribute3&lt;/span&gt; = &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;2&lt;/span&gt;;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;可以直接赋值，不一定要在构造函数中&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;protected&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;attribute4&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #ffc0cb; font-weight: bold;&quot;&gt;my_static&lt;/span&gt; = &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;5&lt;/span&gt;; &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;静态变量也是类变量，类外部访问&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;   &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;A::my_static; 类内部访问：parent::my_static,self::my_static&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;__construct&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;param&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;   {&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;构造函数&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;   $&lt;span style=&quot;color: #D8FA3C;&quot;&gt;this&lt;/span&gt; -&lt;span style=&quot;color: #D8FA3C;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #ffc0cb; font-weight: bold;&quot;&gt;attribute1&lt;/span&gt; = $&lt;span style=&quot;color: #FF6400;&quot;&gt;param&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;__destruct&lt;/span&gt;()
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;   {&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;析构函数&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;__get&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;   {&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;可以拦截$obj-&amp;gt;$name这种对类实例的属性直接访问的语句。&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;   &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;只有在$name属性没有定义时才会触发,这意味着当属性是&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;23: &lt;/span&gt;    &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;私有或者保护时也会触发&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;24: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;return&lt;/span&gt; $&lt;span style=&quot;color: #D8FA3C;&quot;&gt;this&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;25: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;26: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;__set&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt;, $&lt;span style=&quot;color: #FF6400;&quot;&gt;value&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt;27: &lt;/span&gt;   {&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;可以拦截$obj-&amp;gt;$name这种对类实例的属性的值直接赋值的语句。&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;28: &lt;/span&gt;   &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;只有在$name属性没有定义时才会触发,这意味着当属性是&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;29: &lt;/span&gt;    &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;私有或者保护时也会触发&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;30: &lt;/span&gt;   $&lt;span style=&quot;color: #D8FA3C;&quot;&gt;this&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt; = $&lt;span style=&quot;color: #FF6400;&quot;&gt;value&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;31: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;32: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;operation1&lt;/span&gt;()
&lt;span class=&quot;linenr&quot;&gt;33: &lt;/span&gt;   {
&lt;span class=&quot;linenr&quot;&gt;34: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;35: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;36: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;B&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;extends&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;37: &lt;/span&gt;{&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;继承都是类似于C++的公有继承&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;38: &lt;/span&gt; &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;可以重载子类的属性与成员方法&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;39: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;__construct&lt;/span&gt;()
&lt;span class=&quot;linenr&quot;&gt;40: &lt;/span&gt;   {
&lt;span class=&quot;linenr&quot;&gt;41: &lt;/span&gt;   &lt;span style=&quot;color: #D8FA3C;&quot;&gt;parent&lt;/span&gt;::&lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;__construct&lt;/span&gt;();&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;执行父类的构造函数&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;42: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;43: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;44: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;45: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;Interface&lt;/span&gt; (&lt;span style=&quot;color: #ffc0cb; font-weight: bold;&quot;&gt;接口&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt;46: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;interface&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;iTemplate&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;47: &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt;48: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;setVariable&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt;, $&lt;span style=&quot;color: #FF6400;&quot;&gt;var&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;49: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;getHtml&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;template&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;50: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;51: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;52: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;Template&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;implements&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;iTemplate&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;53: &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt;54: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;private&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;vars&lt;/span&gt; = &lt;span style=&quot;color: #FBDE2D;&quot;&gt;array&lt;/span&gt;();
&lt;span class=&quot;linenr&quot;&gt;55: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;56: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;setVariable&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt;, $&lt;span style=&quot;color: #FF6400;&quot;&gt;var&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt;57: &lt;/span&gt;   {
&lt;span class=&quot;linenr&quot;&gt;58: &lt;/span&gt;       $&lt;span style=&quot;color: #D8FA3C;&quot;&gt;this&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;vars&lt;/span&gt;[$&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt;] = $&lt;span style=&quot;color: #FF6400;&quot;&gt;var&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;59: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;60: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;61: &lt;/span&gt;   &lt;span style=&quot;color: #FBDE2D;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;getHtml&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;template&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt;62: &lt;/span&gt;   {
&lt;span class=&quot;linenr&quot;&gt;63: &lt;/span&gt;       &lt;span style=&quot;color: #FBDE2D;&quot;&gt;foreach&lt;/span&gt;($&lt;span style=&quot;color: #D8FA3C;&quot;&gt;this&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;vars&lt;/span&gt; &lt;span style=&quot;color: #FBDE2D;&quot;&gt;as&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt; =&amp;gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;value&lt;/span&gt;) {
&lt;span class=&quot;linenr&quot;&gt;64: &lt;/span&gt;           $&lt;span style=&quot;color: #FF6400;&quot;&gt;template&lt;/span&gt; = &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;str_replace&lt;/span&gt;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;{&#39;&lt;/span&gt; . $&lt;span style=&quot;color: #FF6400;&quot;&gt;name&lt;/span&gt; . &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;}&#39;&lt;/span&gt;, $&lt;span style=&quot;color: #FF6400;&quot;&gt;value&lt;/span&gt;, $&lt;span style=&quot;color: #FF6400;&quot;&gt;template&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;65: &lt;/span&gt;       }
&lt;span class=&quot;linenr&quot;&gt;66: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;67: &lt;/span&gt;       &lt;span style=&quot;color: #FBDE2D;&quot;&gt;return&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;template&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;68: &lt;/span&gt;   }
&lt;span class=&quot;linenr&quot;&gt;69: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;70: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;71: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;object&lt;/span&gt; = &lt;span style=&quot;color: #FBDE2D;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;A&lt;/span&gt;() &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;实例化类&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;72: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-8&quot;&gt;php与数据库（mysql）&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-8&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-8-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-8-1&quot;&gt;示例代码&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-8-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-php&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;面向过程的代码&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt; = &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;mysqli_connect&lt;/span&gt;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;example.com&quot;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;user&quot;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;password&quot;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;database&quot;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;mysqli_connect_errno&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt;)) {
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;Failed to connect to MySQL: &quot;&lt;/span&gt; . &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;mysqli_connect_error&lt;/span&gt;();
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;res&lt;/span&gt; = &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;mysqli_query&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;SELECT &#39;A world full of &#39; AS _msg FROM DUAL&quot;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;row&lt;/span&gt; = &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;mysqli_fetch_assoc&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;res&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;row&lt;/span&gt;[&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;_msg&#39;&lt;/span&gt;];
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;面向对象的代码&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt; = &lt;span style=&quot;color: #FBDE2D;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;mysqli&lt;/span&gt;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;example.com&quot;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;user&quot;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;password&quot;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;database&quot;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; ($&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt;-&lt;span style=&quot;color: #D8FA3C;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;connect_errno&lt;/span&gt;) {
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;Failed to connect to MySQL: &quot;&lt;/span&gt; . $&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;connect_error&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;res&lt;/span&gt; = $&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;query&lt;/span&gt;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;SELECT &#39;choices to please everybody,&#39; AS _msg FROM DUAL&quot;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;num_results&lt;/span&gt; = $&lt;span style=&quot;color: #FF6400;&quot;&gt;res&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;num_rows&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;for&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;i&lt;/span&gt; = &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;0&lt;/span&gt;;$&lt;span style=&quot;color: #FF6400;&quot;&gt;i&lt;/span&gt; &amp;lt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;num_result&lt;/span&gt;; $&lt;span style=&quot;color: #FF6400;&quot;&gt;i&lt;/span&gt;++)
&lt;span class=&quot;linenr&quot;&gt;23: &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt;24: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;row&lt;/span&gt; = $&lt;span style=&quot;color: #FF6400;&quot;&gt;res&lt;/span&gt;-&lt;span style=&quot;color: #D8FA3C;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;fetch_assoc&lt;/span&gt;();
&lt;span class=&quot;linenr&quot;&gt;25: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;row&lt;/span&gt;[&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;_msg&#39;&lt;/span&gt;];
&lt;span class=&quot;linenr&quot;&gt;26: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;27: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;res&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;free&lt;/span&gt;();
&lt;span class=&quot;linenr&quot;&gt;28: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;db&lt;/span&gt;-&amp;gt;&lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;close&lt;/span&gt;();
&lt;span class=&quot;linenr&quot;&gt;29: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;30: &lt;/span&gt; &lt;span style=&quot;color: #7fffd4;&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
为了防止SQL注入攻击，应该对用户的输入使用mysqli\&lt;sub&gt;real\&lt;/sub&gt;&lt;sub&gt;escape\&lt;/sub&gt;&lt;sub&gt;string函数，他会将输入的引号等特殊字符转义，不建议使用addslashes&lt;/sub&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-9&quot;&gt;MySQL&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-9&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-9-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-9-1&quot;&gt;数据库设计的三大范式：&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-9-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;第一范式：字段不可分，
&lt;/li&gt;
&lt;li&gt;第二范式：有主键，非主键字段要依赖主键字段
只要数据列里面的内容出现重复，就意味着应该将表拆分，拆分形成的表必须用外键关联起来。
&lt;/li&gt;
&lt;li&gt;第三范式：非主键字段不能相互依赖，也就是说表中的每一列必须与主键直接相关而不能间接相关。
与主键没有直接关系的数据列必须清除（创建一个表来存放他们）。
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-9-2&quot;&gt;数据库的常用模式&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-9-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-9-2-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-2-1&quot;&gt;主扩展模式&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-2-1&quot;&gt;
&lt;p&gt;
比如说公司有不同类型的员工，如设计师，程序员，PM等，那么可以先建一个员
工表，这个表存放所有类型的员工都有的属性，如姓名，性别，入职时间等等等，
然后在设计师一个表，程序员一个表，PM一个表，但是这些表都与员工表关联
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-2-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-2-2&quot;&gt;主从模式&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-2-2&quot;&gt;
&lt;p&gt;
一张表的一条记录对应另一张表的多条记录。也就是一对多
eg：论坛的板块表与帖子表就是这种关系，而帖子表与回复表也是这种关系
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-2-3&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-2-3&quot;&gt;名值模式&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-9-2-4&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-2-4&quot;&gt;多对多模式&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-2-4&quot;&gt;
&lt;p&gt;
一本书可以有多个作者，一个作者也可以写多本书，所以书目信息表与作者信息
表就是多对多关系，那么设计时通常是在加入一个关联表，也就是通过3个表来
表示这种关系
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-9-3&quot;&gt;常用的SQL代码&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-9-3&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-9-3-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-1&quot;&gt;登录&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;mysql –h hostname –u username –p password.
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-2&quot;&gt;增加新用户&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;grant 权限 on 数据库.* to 用户名称@登陆主机  identified 密码
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-sql&quot;&gt;grant select, insert, update, delete
on books.*
to user identified by &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;1234&#39;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-9-3-3&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-3&quot;&gt;Select&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;select  列1,列2  from  表名
&lt;/li&gt;
&lt;li&gt;Select  表1.列1，表2. 列2  from  表1， 表2（多张表中选取）
&lt;/li&gt;
&lt;li&gt;select  *  from  表名
&lt;/li&gt;
&lt;li&gt;select  distinct  列2   from  表名
&lt;/li&gt;
&lt;li&gt;select  列1,列2  from  表名  order by  列 （后可加ASC，DESC（逆序））
&lt;/li&gt;
&lt;li&gt;select  列  from 表名称  limit  数值  （限制返回的结果集的行数）
&lt;/li&gt;
&lt;li&gt;select  列  from  表名称  where  列  in （value1，value2…….）
&lt;/li&gt;
&lt;li&gt;select  列   into   表1   from   表名  where子句（从一个表选取插入另一个表，可用于备份）
&lt;/li&gt;
&lt;li&gt;select  *   into   表1   from   表名  where子句
&lt;/li&gt;

&lt;li&gt;select  列名称  from 表名 where 列名 运算符 值 （可以加and与
（运算符：&amp;gt;,&amp;gt;=,&amp;lt;,&amp;lt;=,=,&amp;lt;&amp;gt;,between
    （类似between value1 and value2）,like.其中like支持通配符，通配符如下：
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-4&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-4&quot;&gt;insert&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;insert  表名  values（值1，值2，值3………….）
&lt;/li&gt;
&lt;li&gt;insert  表名 (列1，列2……….)  values （值1，值2………….）
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-5&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-5&quot;&gt;update&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-5&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;update 表名称set 列名称=新值  where 列名称=某值
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-6&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-6&quot;&gt;delete（删除行）&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-6&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;delete  from 表名称 where  列名称=值
&lt;/li&gt;
&lt;li&gt;delete from  表名称    (删除所有行，但是保留表)
&lt;/li&gt;
&lt;li&gt;delete * from 表名称   (删除所有行，但是保留表)
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-7&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-7&quot;&gt;create database&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-7&quot;&gt;
&lt;p&gt;
create database 数据库名;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-8&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-8&quot;&gt;create  table&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-8&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
create  table  表名 &lt;br /&gt;
( &lt;br /&gt;
列名称1   数据类型， &lt;br /&gt;
列名称2   数据类型， &lt;br /&gt;
………… &lt;br /&gt;
) &lt;br /&gt;
约束：NOT  NULL &lt;br /&gt;
     Primary key：主键，不用在指定unique。 &lt;br /&gt;
     Unique：字段必须唯一。 &lt;br /&gt;
     Foreign key:外键 &lt;br /&gt;
     Check：值范围，eg：check（Id&amp;gt;0）. &lt;br /&gt;
     Default: 默认值，default ‘yangyu’。 &lt;br /&gt;
     Auto&lt;sub&gt;increment：通常对主键。&lt;/sub&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-9-3-9&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-9&quot;&gt;Index&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-9&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;Create  index：create  index  索引名 on  表名 （列名）
&lt;/li&gt;
&lt;li&gt;Drop   index ： drop index  索引名  on 表名
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-10&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-10&quot;&gt;Drop&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-10&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;Drop  table  ： drop table 表名
&lt;/li&gt;
&lt;li&gt;Drop  database ：drop database 数据库名
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-11&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-11&quot;&gt;Alert&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-9-3-11&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;Alert  table ：alert  table  表名  add  列名  数据类型
&lt;/li&gt;
&lt;li&gt;alert  table 表名  drop  column 列名
&lt;/li&gt;
&lt;li&gt;alert  table  表名  alert  column 列名 数据类型
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-9-3-12&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-9-3-12&quot;&gt;从文件创建：mysql –u root &amp;lt;file.sql&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&quot;outline-container-sec-1-10&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-10&quot;&gt;其它技巧&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-10&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;对字符串可以使用单，双引号的场合尽量使用单引号，因为使用双引号效率不高。
&lt;/li&gt;
&lt;li&gt;对于一个没有设置的变量直接用if会有错误，因此应该使用isset或者empty检查，推荐empty。
&lt;/li&gt;
&lt;li&gt;Show&lt;sub&gt;source函数可以高亮显示程序代码。&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;密码加密推荐使用crypt函数的blowfish算法，不推荐使用sha1,或者md5.
&lt;/li&gt;
&lt;li&gt;生成一个唯一的字符串：uniqid函数。
&lt;/li&gt;
&lt;li&gt;对于表单，在点击提交按钮之前$&lt;sub&gt;POST中的索引是不存在的，所以这样调用&lt;/sub&gt;$&lt;sub&gt;POST[‘name’]试图获得name输入框的值会报错，因为‘name’索引不存在。这时调用isset和empty返回false与true，如果点击了提交按钮，但是用户没有在输入框中输入任何数据，那么&lt;/sub&gt;$&lt;sub&gt;POST[‘name’]的值是空字符串，这时调用isset会返回true，所以最好调用empty函数。&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;尽量使用字符串处理函数，而不要使用正则表达式，因为前者更快。
&lt;/li&gt;
&lt;li&gt;_&lt;sub&gt;autoload&lt;/sub&gt;($classname)需要自动加载的时候，定义这个函数。
&lt;/li&gt;
&lt;li&gt;每一个成功的POST页面都应该重定向，因为如果不重定向，那么刷新该页面会造成POST数据重复提交。。
&lt;/li&gt;
&lt;li&gt;函数返回引用时必须在定义与调用的时候都加上&amp;amp;，但是return语句不用
加&amp;amp;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-php&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;add_some_extra&lt;/span&gt;(&amp;amp;$&lt;span style=&quot;color: #FF6400;&quot;&gt;string&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;    $&lt;span style=&quot;color: #FF6400;&quot;&gt;string&lt;/span&gt; .= &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;and something extra.&#39;&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;str&lt;/span&gt; = &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;This is a string,&#39;&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;&lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;add_some_extra&lt;/span&gt;($&lt;span style=&quot;color: #FF6400;&quot;&gt;str&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;str&lt;/span&gt;;    &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;outputs &#39;This is a string, and something extra.&#39;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;function&lt;/span&gt; &amp;amp;&lt;span style=&quot;color: #FF6400;&quot;&gt;returns_reference&lt;/span&gt;()
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;return&lt;/span&gt; $&lt;span style=&quot;color: #FF6400;&quot;&gt;someref&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;$&lt;span style=&quot;color: #FF6400;&quot;&gt;newref&lt;/span&gt; =&amp;amp; &lt;span style=&quot;color: #F8F8F8; background-color: #0C1021;&quot;&gt;returns_reference&lt;/span&gt;();
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;&lt;span style=&quot;color: #7fffd4;&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>set-theory.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/set-theory.html"/>
    <title>SET THEORY(30%)</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;SET THEORY(30%)&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;Set Theory&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;总体把握&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1&quot;&gt;朴素集合论（直觉上）：康托儿创立&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-2&quot;&gt;罗素悖论（理发师悖论）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3&quot;&gt;公理化集合论&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-3-1&quot;&gt;外延公理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3-2&quot;&gt;空集公理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3-3&quot;&gt;子集公理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3-4&quot;&gt;偶集公理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3-5&quot;&gt;并集公理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3-6&quot;&gt;幂集公理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;Set Theory&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;总体把握&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
朴素集合论（康托儿）-—&amp;gt;罗素悖论–—&amp;gt;公理化集合论
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;朴素集合论（直觉上）：康托儿创立&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;p&gt;
几个基本概念：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;基数（势）：可以理解为大小
&lt;/li&gt;
&lt;li&gt;一一对应：比较两个集合的大小时，如果两个集合能一一对应，那么这两
个集合基数相同或等势，均势
&lt;/li&gt;
&lt;li&gt;可数无穷大（可列无穷大）：如果一个集合和自然数集一一对应，那么这
个集合就是可数，或者可列的，因为可以像数数（1 2 3 …)
一样列出来,所以所有的非负偶数集都是可数的，而实数集是不
可数的（対角线法证明）
&lt;/li&gt;
&lt;li&gt;対角线法：对于（0，1）之间的实数，先假设所有的实数都列出来了，那
么构造一个实数使它与上面的每一个数都不同就能推出矛盾，
够造的方法是使対角线上的数位不同。
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
朴素集合论的问题：
按照朴素集合论的观点，只要能够给出一个确切的条件P(x)，那么就能定义
             一个集合(any collection definable is a set),但是事实上
             这是不成立的，罗素悖论就是一个例子，公理化集合论的好处
             通过一系列的公理可以推出哪些集合存在，哪些集合不存在，
             这样就可以避开那些悖论
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;罗素悖论（理发师悖论）&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;p&gt;
一个理发师声称给城里不刮胡子的人刮胡子，而且也只给这些不刮胡子的人刮，
那么理发师该不该给自己刮胡子。
any collection definable is a set
数学表述：
    P表示所有不包含自身的集合的集合（也就是所有不自吞的集合所组成的集
    合），那么P是否属于自己呢（也就是P是否自吞呢）。这是一个悖论，因为
    如果P属于P，那么P是自吞的，而根据P的性质，P只包含不自吞的集合，所
    以最后 P==&amp;gt;非P，非P==&amp;gt;P.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-3&quot;&gt;公理化集合论&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-3&quot;&gt;
&lt;p&gt;
不定义什么是集合，而是通过一些公理来描述集合的性质，通过这些公理来推导，
这些公理都是小心设计，所以避开了罗素悖论。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-3-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-3-1&quot;&gt;外延公理&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-3-1&quot;&gt;
&lt;p&gt;
判断2个集合是否相等
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-3-2&quot;&gt;空集公理&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-3-2&quot;&gt;
&lt;p&gt;
存在一个唯一的空集
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3-3&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-3-3&quot;&gt;子集公理&lt;/h5&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3-4&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-3-4&quot;&gt;偶集公理&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-3-5&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-3-5&quot;&gt;并集公理&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-3-6&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-1-3-6&quot;&gt;幂集公理&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-1-3-6&quot;&gt;
&lt;p&gt;
对于集合A，存在一个集合B，恰好以A的一切子集为元素
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>css.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/css.html"/>
    <title>css笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;css笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;CSS&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;基本语法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;css的常用属性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;CSS&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
css:层叠样式表,是指定网页元素显示方式的一种方法
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;基本语法&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;三种引用css的方法
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;rel&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;href&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;/static/css/your.css&quot;&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;type&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;media&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;screen&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;style&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;type&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;media&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;screen&quot;&lt;/span&gt;&amp;gt;
  p {
  color:&lt;span style=&quot;color: #ffffff; background-color: #FF0000;&quot;&gt;red&lt;/span&gt;;
  font-size:12px;
  }
&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;style&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;style&lt;/span&gt;=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;color: &lt;/span&gt;&lt;span style=&quot;color: #ffffff; background-color: #FF0000;&quot;&gt;red&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;; font-size: 12px;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #FF6400;&quot;&gt;p&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;css selector
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-css&quot;&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p &lt;/span&gt;{&lt;span style=&quot;color: #FF6400;&quot;&gt;color&lt;/span&gt;: &lt;span style=&quot;color: #ffffff; background-color: #FF0000;&quot;&gt;red&lt;/span&gt;;}                 &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;tag selector&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;body, ul, ol &lt;/span&gt;{}                 &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;body,ul,ol标签&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;

&lt;span style=&quot;color: #FF6400;&quot;&gt;#nav &lt;/span&gt;{&lt;span style=&quot;color: #FF6400;&quot;&gt;font-size&lt;/span&gt;: 12px;}         &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;id selector&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;.sidebar &lt;/span&gt;{&lt;span style=&quot;color: #FF6400;&quot;&gt;font-family&lt;/span&gt;:Times}    &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;class selector&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;

&lt;span style=&quot;color: #FF6400;&quot;&gt;h1#content &lt;/span&gt;{}                       &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;id为content的h1标签&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;h1.&lt;/span&gt;&lt;span style=&quot;color: #ffffff; background-color: #0000FF;&quot;&gt;blue&lt;/span&gt;{}                           &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;class为&lt;/span&gt;&lt;span style=&quot;color: #ffffff; background-color: #0000FF;&quot;&gt;blue&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;的h1标签&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;

&lt;span style=&quot;color: #FF6400;&quot;&gt;li a &lt;/span&gt;{&lt;span style=&quot;color: #FF6400;&quot;&gt;text-decoration&lt;/span&gt;: none;}   &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;descendant selector&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;li #content&lt;/span&gt;{}
&lt;span style=&quot;color: #FF6400;&quot;&gt;li .&lt;/span&gt;&lt;span style=&quot;color: #ffffff; background-color: #0000FF;&quot;&gt;blue&lt;/span&gt;{}

&lt;span style=&quot;color: #FF6400;&quot;&gt;a&lt;/span&gt;:link {&lt;span style=&quot;color: #FF6400;&quot;&gt;color&lt;/span&gt;: &lt;span style=&quot;color: #ffffff; background-color: #FF0000;&quot;&gt;red&lt;/span&gt;}             &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;pseudo-class selector&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;a[title] &lt;/span&gt;{&lt;span style=&quot;color: #FF6400;&quot;&gt;color&lt;/span&gt;: &lt;span style=&quot;color: #ffffff; background-color: #FF0000;&quot;&gt;red&lt;/span&gt;}           &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;attribute selector&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;a[href=&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;www.baidu.com&quot;&lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;] &lt;/span&gt;{&lt;span style=&quot;color: #FF6400;&quot;&gt;color&lt;/span&gt;:&lt;span style=&quot;color: #ffffff; background-color: #FF0000;&quot;&gt;red&lt;/span&gt;} &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/**/&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;css box
&lt;p class=&quot;verse&quot;&gt;
css的盒子模型： &lt;br /&gt;&lt;img src=&quot;static/img/css-box.png&quot; alt=&quot;css-box.png&quot; /&gt;&lt;br /&gt;
这也就是margin，border，padding三个属性的含义了。 &lt;br /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;css定位
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;浮动定位
&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;verse&quot;&gt;
html文档有一个标准文档流，每一个块级元素（如div）都要单独占一行&lt;sup&gt;&lt;a id=&quot;fnr.1&quot; name=&quot;fnr.1&quot; class=&quot;footref&quot; href=&quot;#fn.1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;br /&gt;&lt;img src=&quot;static/img/div-per-line.png&quot; alt=&quot;div-per-line.png&quot; /&gt;&lt;br /&gt;
如果给一个元素添加浮动，那么他就会脱离标准文档流，而悬浮于标准文档流之上: &lt;br /&gt;&lt;img src=&quot;static/img/div-float-23.png&quot; alt=&quot;div-float-23.png&quot; /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;
这是给div2,div3添加左浮动后的效果，因为div2,div3添加了浮动，所以二者脱离标准文档流，
那么div4就会上移，因为div1没有浮动，所以div2在div1的下方（不是div1的右方），div3浮动
所以跟在div2的后面。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;绝对定位与相对定位
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;absolute:相对于父元素(top, left, right, bottom)
&lt;/li&gt;
&lt;li&gt;fixed: 相对于浏览器窗口
&lt;/li&gt;
&lt;li&gt;relative: 相对于元素的原始位置而言,其原始占位信息依然存在
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;css的常用属性&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;foreground color
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-css&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;p &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;    &lt;span style=&quot;color: #FF6400;&quot;&gt;color&lt;/span&gt;:&lt;span style=&quot;color: #ffffff; background-color: #FF0000;&quot;&gt;red&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;}
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;body &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt;5: &lt;/span&gt;    &lt;span style=&quot;color: #FF6400;&quot;&gt;color&lt;/span&gt;:&lt;span style=&quot;color: #000000; background-color: #32FF00;&quot;&gt;rgb(50, 255, 0)&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;6: &lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;background
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-css&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;body &lt;/span&gt;{
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;    &lt;span style=&quot;color: #FF6400;&quot;&gt;background-color&lt;/span&gt;:&lt;span style=&quot;color: #000000; background-color: #DCDCDC;&quot;&gt;rgb(220, 220, 220)&lt;/span&gt;;
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;    &lt;span style=&quot;color: #FF6400;&quot;&gt;background-image&lt;/span&gt;: url(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;sample.png&#39;&lt;/span&gt;);
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;    &lt;span style=&quot;color: #FF6400;&quot;&gt;background-repeat&lt;/span&gt;:no-repeat;
&lt;span class=&quot;linenr&quot;&gt;5: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;6: &lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;margin
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-css&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;margin&lt;/span&gt;: 0 auto;                &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;自动居中&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;*/&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;footnotes&quot;&gt;
&lt;h2 class=&quot;footnotes&quot;&gt;Footnotes: &lt;/h2&gt;
&lt;div id=&quot;text-footnotes&quot;&gt;

&lt;div class=&quot;footdef&quot;&gt;&lt;sup&gt;&lt;a id=&quot;fn.1&quot; name=&quot;fn.1&quot; class=&quot;footnum&quot; href=&quot;#fnr.1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;p class=&quot;footpara&quot;&gt;
&lt;a href=&quot;http://blog.jobbole.com/37112/&quot;&gt;http://blog.jobbole.com/37112/&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt; </content>
  </entry>
  
  <entry>
    <id>gevent.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/gevent.html"/>
    <title>gevent源码分析</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;gevent源码分析&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;gevent 笔记&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;continuation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;coroutine&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-2-1&quot;&gt;gevent源码分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;gevent 笔记&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;continuation&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
continuation是一个程序设计语言理论上的概念，不怕英文的童鞋可以看这一篇&lt;a href=&quot;http://en.wikipedia.org/wiki/Continuation&quot;&gt;wiki&lt;/a&gt;, 你可以将continuation看成是一个数据结构，这个数据结构可以保存程序的执行流的状态，而且
可以在程序中访问这个数据结构来恢复程序的执行流，这就赋予了程序一种能力，也就是说我可以先获得一个continuation，接着挂起一个程序正在执行的部分，然后跳到该程序的其
他部分执行，以后又可以通过调用continuation来恢复被挂起的执行流。这种能力为异常，触发器以及协程的实现提供非常了便利的条件。某种程度上而言，continuation是这些实现
这些程序语言设施的基础
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-scheme&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;the-continuation&lt;/span&gt; #f)
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; (&lt;span style=&quot;color: #FF6400;&quot;&gt;test&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;let&lt;/span&gt; ((i 0))
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;call/cc calls its first function argum&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; background-color: #bebebe; font-style: italic;&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;nt, passing&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;a continuation variable representing t&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; background-color: #bebebe; font-style: italic;&quot;&gt;h&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;is point in&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;the program as the argument to that fu&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; background-color: #bebebe; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;ction.&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;In this case, the function argument as&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; background-color: #bebebe; font-style: italic;&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;igns that&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;continuation to the variable the-conti&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; background-color: #bebebe; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;uation.&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;call/cc&lt;/span&gt; (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (k) (set! the-continuation k)))
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;                                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;The next time the-continuation is call&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; background-color: #bebebe; font-style: italic;&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;d, we start here.&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;    (set! i (+ i 1))
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;    i))
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
上述是一段scheme代码，摘自wikipedia。不是本人装逼，实在是用scheme很方便，我大体的解释下这段代码，一开始定义了一个变量the-continuation，接着定义一个函数test，在
函数体中let定义一个局部变量i，接着调用call/cc，该函数的作用可以看注释，call/cc的第一个参数是一个函数，call/cc的作用是将代表当前continuation的一个变量作为参数传
递给它的第一个参数，对本例而言就是将代表当前continuation的变量传递给那个lambda匿名函数，而这个匿名函数会将the-continuation设置为当前的continuation，所以运行
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-scheme&quot;&gt;(test)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;coroutine&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;p&gt;
Coroutine 也就是 corporate routine，中文名就是协程，从它的英文可以看出是协同的例程的意思
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-2-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-1&quot;&gt;gevent源码分析&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-1&quot;&gt;
&lt;p&gt;
在Greenlet类的join函数中有如下代码：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;switch&lt;/span&gt; = getcurrent().switch
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;self&lt;/span&gt;.rawlink(switch)
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;result&lt;/span&gt; = &lt;span style=&quot;color: #FBDE2D;&quot;&gt;self&lt;/span&gt;.parent.switch()
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
rawlink的作用是注册一个函数，这个函数会在这个greenlet运行完成后调用
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>git.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/git.html"/>
    <title>git/github学习笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;git/github学习笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;git学习笔记&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;基本使用&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1&quot;&gt;git的基本命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-2&quot;&gt;git一般的工作过程是：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;git github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;gitignore syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;git学习笔记&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
git是一个分布式版本管理系统
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;基本使用&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;git的基本命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;安装：sudo apt-get install git git-uid
&lt;/li&gt;
&lt;li&gt;init：  git init（工作目录运行，会生成一个.git目录，里面会存放索引数据）
&lt;/li&gt;
&lt;li&gt;add:    git add(添加文件)
git add . （添加所有）
（只有添加了新文件时才需要git add，如果只是修改了或删除了文件，可以只执行git commit -a）
&lt;/li&gt;
&lt;li&gt;commit: git commit(提交，一般调用add后只是在临时区，只有调用commit才会
提交到git)
git commit -m &quot;comment&quot;
git commit -a           commit all
&lt;/li&gt;
&lt;li&gt;clone:  git clone 只要有.git目录，那么就可以调用该命令来得到git管理的
所有文件
eg: git clone test.git dest\&lt;sub&gt;dir&lt;/sub&gt;/    git-—&amp;gt;dest\&lt;sub&gt;dir&lt;/sub&gt;
    git clone 账户@IP:工作树路径 你的目录     远程github
&lt;/li&gt;
&lt;li&gt;pull:  git pull（将远程分支拉到本地，然后和本地分支合并）
&lt;/li&gt;
&lt;li&gt;push： git push（将本地分支推送远程仓库）
&lt;/li&gt;
&lt;li&gt;branch： 创建分支或者查看有哪些分支
git branch             查看有哪些分支
git branch TmpBranch  创建分支
git branch -d TmpBranch 删除分支
&lt;/li&gt;
&lt;li&gt;checkout：改变分支（git checkout TmpBranch)
&lt;/li&gt;
&lt;li&gt;merge：将制定分支与当前分支合并(git merge TmpBranch 将TmpBranch与当前分支合并）
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;git一般的工作过程是：&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;git pull(将远程分支与本地分支合并)
&lt;/li&gt;
&lt;li&gt;git log（查看其他成员的更改）
&lt;/li&gt;
&lt;li&gt;git branch (建一个本地分支）
&lt;/li&gt;
&lt;li&gt;git checkout（进入本地分支）
&lt;/li&gt;
&lt;li&gt;在该本地分支上进行修改
&lt;/li&gt;
&lt;li&gt;git checkout（回到主分支）
&lt;/li&gt;
&lt;li&gt;git merge （将分支上所做的工作合并到主分支）
&lt;/li&gt;
&lt;li&gt;git branch -d （删除今天创建的分支）
&lt;/li&gt;
&lt;li&gt;git pull（将远程仓库合并到本地仓库,很重要，因为今天可能别人修改了远程仓库）
&lt;/li&gt;
&lt;li&gt;git push （将本地仓库合并到远程仓库）
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;git github&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;git remote add remoteName remoteUrl
eg: git remote add origin git@github.com:youName/github-example.git
只第一次新建了仓库时才需要运行，实际上是将本地的仓库与远程的仓库关联起来
如果出错可以使用命令 git remote rm origin
&lt;/li&gt;
&lt;li&gt;git push origin master(将本地的仓库推送到远端）
如果报错那么极有可能是远端仓库被别人提交过了，所以要先pull，与本地合并然后在提交
git pull origin master
&lt;/li&gt;
&lt;li&gt;git pull -u origin master
origin是远程分支的名字，master是本地分支的名字
&lt;/li&gt;
&lt;li&gt;子模块
git submodule add 子模快url 本地的路径
eg: git submodule add &lt;a href=&quot;https://github.com/libevent/libevent.git&quot;&gt;https://github.com/libevent/libevent.git&lt;/a&gt; .dep/libevent
当clone了一份包含子模快的仓库时，调用git submodule update –init可以拉取那些子模快
&lt;/li&gt;
&lt;li&gt;fork后合并原仓库的改变
情景如下：我在github fork一个仓库（&lt;a href=&quot;https://github.com/purcell/emacs.d.git&quot;&gt;https://github.com/purcell/emacs.d.git&lt;/a&gt; ）到我的的账户
         （&lt;a href=&quot;https://github.com/yuyang0/emacs.d.git&quot;&gt;https://github.com/yuyang0/emacs.d.git&lt;/a&gt; ）然后我将这个fork仓库clone到本地，现在
         我要合并原仓库的改变。。
first: git remote add purcell &lt;a href=&quot;https://github.com/purcell/emacs.d.git&quot;&gt;https://github.com/purcell/emacs.d.git&lt;/a&gt;
next: git pull purcell master (git fetch purcell, git merge purcell/master)
next: git push origin master
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;gitignore syntax&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&quot;#&quot; ： 注释
&lt;/li&gt;
&lt;li&gt;！   : 取反，即匹配模式的文件不忽略
&lt;/li&gt;
&lt;li&gt;/   ： /结尾被当作目录，该目录的所有文件忽略
&lt;/li&gt;
&lt;li&gt;/   ： /开头则只忽略工作树根目录开始匹配eg：core/TODO与/core/TODO不
同，前者只要文件路径包含core/TODO（如doc/core/TODO）即匹配，
而后者则只匹配工作树根目录下的core文件夹的TODO文件
&lt;/li&gt;
&lt;li&gt;glob模式：glob模式不同于正则表达式，等同于shell模式下的方式
&lt;p class=&quot;verse&quot;&gt;
*：匹配任意字符 &lt;br /&gt;
?: 匹配任意单个字符 &lt;br /&gt;
[abcd]: 匹配a b c d中的一个 &lt;br /&gt;
[a-z]: 匹配a-z之间的一个字符 &lt;br /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>logion-apothegm.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/logion-apothegm.html"/>
    <title>logion and apothegm</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;logion and apothegm&lt;/h1&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;hope is a good thing, maybe the best of things
&lt;/li&gt;
&lt;li&gt;get busy living or get busy dying
&lt;/li&gt;
&lt;li&gt;为天地立心,为生民立命,为往圣继绝学,为万世开太平
&lt;/li&gt;
&lt;li&gt;人我之际要看得平：平则不忮，功名之际要看得淡：淡则不求，生死之际要看得破：
破则不惧。人能不忮不求不惧，则无往而非乐境而生气盎然矣  –—戴安澜
&lt;/li&gt;
&lt;li&gt;如果额头终将刻上皱纹,那么你只能做到不让皱纹刻在心里   –—中国合伙人
&lt;/li&gt;
&lt;li&gt;很多人的努力程度之低，根本谈不上比天赋
&lt;/li&gt;
&lt;/ol&gt; </content>
  </entry>
  
  <entry>
    <id>index.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/index.html"/>
    <title>post list</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;post list&lt;/h1&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;Emacs&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;a href=&quot;emacs.html&quot;&gt;emacs/elisp笔记&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-2&quot;&gt;programming language&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;a href=&quot;scheme.html&quot;&gt;scheme笔记&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;php.html&quot;&gt;php笔记&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;python-note.html&quot;&gt;python笔记&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;linux-c-garbled-characters.html&quot;&gt;Linux C语言乱码处理&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-3&quot;&gt;web&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;a href=&quot;css.html&quot;&gt;css笔记&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;django.html&quot;&gt;django笔记&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;gevent.html&quot;&gt;gevent笔记与源码分析&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-4&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-4&quot;&gt;tools&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;a href=&quot;git.html&quot;&gt;git/github笔记&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;code-snippet.html&quot;&gt;有用的代码片段&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-5&quot;&gt;math&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-5&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;a href=&quot;set-theory.html&quot;&gt;SET THEORY(30%)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-6&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-6&quot;&gt;reading notes&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-6&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;a href=&quot;reading-notes/sicp.html&quot;&gt;SICP&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-7&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-7&quot;&gt;others&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-7&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;a href=&quot;reading-notes/how-to-study.html&quot;&gt;如何快速学习&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;investment.html&quot;&gt;Investment&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;funny-video.html&quot;&gt;我喜欢的视频&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;org-mode-dropbox-blog.html&quot;&gt;用org-mode与dropbox搭建静态博客&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;logion-apothegm.html&quot;&gt;格言&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>python-note.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/python-note.html"/>
    <title>python笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;python笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;python&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;库的使用方法&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-2-1&quot;&gt;requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-2&quot;&gt;pickle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-3&quot;&gt;json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-4&quot;&gt;HTMLParser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-5&quot;&gt;pyquery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-6&quot;&gt;watchdog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2-7&quot;&gt;rauth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;python&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;virtualenv&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
这是一份不错的&lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs.html&quot;&gt;tutorial&lt;/a&gt;
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;virtualenv venv
&lt;/li&gt;
&lt;li&gt;venv/bin/activate
&lt;/li&gt;
&lt;li&gt;deactivate
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
virtualenvwrapper可以对virtualenv进行一定的增强
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;install
&lt;pre class=&quot;example&quot;&gt;
sudo pip install virtualenvwrapper
export WORKON_HOME=~/envs
source /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;mkvirtualenv my&lt;sub&gt;env&lt;/sub&gt;
在WORKON&lt;sub&gt;HOME中创建一个名为my&lt;/sub&gt;&lt;sub&gt;env虚拟环境&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;workon my&lt;sub&gt;env&lt;/sub&gt;
切换到my&lt;sub&gt;env环境&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;deactivate
&lt;/li&gt;
&lt;li&gt;lssitepackages
&lt;/li&gt;
&lt;li&gt;lsvirtualenv
&lt;/li&gt;
&lt;li&gt;rmvirtualenv my&lt;sub&gt;env&lt;/sub&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;库的使用方法&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-2-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-1&quot;&gt;requests&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-1&quot;&gt;
&lt;p&gt;
python的标准库中的urllib,urllib2的接口并不好用,requests的接口更简洁一致,这是官方&lt;a href=&quot;http://docs.python-requests.org/en/latest/&quot;&gt;文档&lt;/a&gt;
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;get
requests.get(url, **kwargs)
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;payload&lt;/span&gt; = {&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;key1&#39;&lt;/span&gt;: &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;value1&#39;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;key2&#39;&lt;/span&gt;: &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;value2&#39;&lt;/span&gt;}
&lt;span style=&quot;color: #FF6400;&quot;&gt;r&lt;/span&gt; = requests.get(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;http://httpbin.org/get&quot;&lt;/span&gt;, params=payload)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;post
requests.post(url, data=None, **kwargs)
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;data: 是要post的数据
&lt;/li&gt;
&lt;li&gt;kwargs: 可以使用headers =  {….}指定http request header
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; json
&lt;span style=&quot;color: #FF6400;&quot;&gt;url&lt;/span&gt; = &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;https://api.github.com/some/endpoint&#39;&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;payload&lt;/span&gt; = {&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;some&#39;&lt;/span&gt;: &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;data&#39;&lt;/span&gt;}
&lt;span style=&quot;color: #FF6400;&quot;&gt;headers&lt;/span&gt; = {&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;content-type&#39;&lt;/span&gt;: &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;application/json&#39;&lt;/span&gt;}

&lt;span style=&quot;color: #FF6400;&quot;&gt;r&lt;/span&gt; = requests.post(url, data=json.dumps(payload), headers=headers)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;put
requests.put(url, **kwargs)
&lt;/li&gt;
&lt;li&gt;response object
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; requests
&lt;span style=&quot;color: #FF6400;&quot;&gt;r&lt;/span&gt; = requests.get(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;http://www.baidu.com&#39;&lt;/span&gt;)
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.text
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.url
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.encoding
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.status_code                    &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;response status code(eg:200)&lt;/span&gt;
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.headers                        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;a dict&lt;/span&gt;
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.headers[&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;]        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;response headers&lt;/span&gt;
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.cookies[&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;example_cookie_name&#39;&lt;/span&gt;] &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;cookies&lt;/span&gt;
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.json()                         &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#  &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;built-in json function&lt;/span&gt;

&lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; r.request.headers         &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;http request headers&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-2&quot;&gt;pickle&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;dump(self, obj, file) 将对象序列化到文件
&lt;/li&gt;
&lt;li&gt;dumps(self, obj)      会返回序列化的字符串
&lt;/li&gt;
&lt;li&gt;load(file)      从文件加载对象
&lt;/li&gt;
&lt;li&gt;loads(str)      从字符串加载对象
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; pickle
&lt;span style=&quot;color: #FF6400;&quot;&gt;d&lt;/span&gt; = {&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;tag&#39;&lt;/span&gt;:&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;django&#39;&lt;/span&gt;}
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;with&lt;/span&gt; &lt;span style=&quot;color: #94bff3;&quot;&gt;open&lt;/span&gt;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;aa.pickle&#39;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;wb&#39;&lt;/span&gt;) &lt;span style=&quot;color: #FBDE2D;&quot;&gt;as&lt;/span&gt; fp:
    pickle.dump(d, fp)

&lt;span style=&quot;color: #FBDE2D;&quot;&gt;with&lt;/span&gt; &lt;span style=&quot;color: #94bff3;&quot;&gt;open&lt;/span&gt;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;aa.pickle&#39;&lt;/span&gt;, &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;rb&#39;&lt;/span&gt;) &lt;span style=&quot;color: #FBDE2D;&quot;&gt;as&lt;/span&gt; fp:
    &lt;span style=&quot;color: #FF6400;&quot;&gt;d&lt;/span&gt; = pickle.load(fp)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-3&quot;&gt;json&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-3&quot;&gt;
&lt;p&gt;
和pickle类似,也是dump,dumps,load,loads这几个接口(以s结尾的就是字符串,否则就是文件)
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-4&quot;&gt;HTMLParser&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-4&quot;&gt;
&lt;p&gt;
文档中的示例代码:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; HTMLParser &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; HTMLParser

&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;create a subclass and override the handler methods&lt;/span&gt;
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;MyHTMLParser&lt;/span&gt;(HTMLParser):
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;handle_starttag&lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;self&lt;/span&gt;, tag, attrs):
        &lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;Encountered a start tag:&quot;&lt;/span&gt;, tag
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;handle_endtag&lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;self&lt;/span&gt;, tag):
        &lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;Encountered an end tag :&quot;&lt;/span&gt;, tag
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;handle_data&lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;self&lt;/span&gt;, data):
        &lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;Encountered some data  :&quot;&lt;/span&gt;, data

&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;instantiate the parser and fed it some HTML&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;parser&lt;/span&gt; = MyHTMLParser()
parser.feed(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Test&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&#39;&lt;/span&gt;
            &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Parse me!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
从上面的代码可以看出:该库的使用方法就是在类中处理starttag, endtag, data(标签中间的文本)
然后调用feed方法就好,实际是一个流式html解析器
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-5&quot;&gt;pyquery&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-5&quot;&gt;
&lt;p&gt;
一个使用jquery语法的html解析器,非常方便,比BeautifulSoup好用,这是它的&lt;a href=&quot;http://pythonhosted.org/pyquery/index.html&quot;&gt;文档&lt;/a&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;form pyquery &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; PyQuery
&lt;span style=&quot;color: #FF6400;&quot;&gt;html&lt;/span&gt; = &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;&amp;lt;html&amp;gt;&amp;lt;title&amp;gt;hello world&amp;lt;/title&amp;gt;&amp;lt;/html&amp;gt;&#39;&lt;/span&gt;
&lt;span style=&quot;color: #FF6400;&quot;&gt;d&lt;/span&gt; = PyQuery(html, parser = &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;html&#39;&lt;/span&gt;)
d(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;title&#39;&lt;/span&gt;).text()
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
在调用PyQuery时尽量指定parser, 因为默认判断有时会出错,比如用xml的parser去解析html会得到不正确的结果.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FF6400;&quot;&gt;d&lt;/span&gt; = PyQuery(html, parser = &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;html&#39;&lt;/span&gt;)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;selector&lt;/span&gt;
d(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;body&#39;&lt;/span&gt;)
d(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;div#header&#39;&lt;/span&gt;)
d(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;div.class ul&#39;&lt;/span&gt;)
d(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;meta[name=keywords]&#39;&lt;/span&gt;) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;attribute&lt;/span&gt;

&lt;span style=&quot;color: #FF6400;&quot;&gt;links&lt;/span&gt; = d(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;div.links a&#39;&lt;/span&gt;)
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;该处应使用下标,而不是for link in links&lt;/span&gt;
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;for&lt;/span&gt; i &lt;span style=&quot;color: #FBDE2D;&quot;&gt;in&lt;/span&gt; &lt;span style=&quot;color: #94bff3;&quot;&gt;range&lt;/span&gt;(0, &lt;span style=&quot;color: #94bff3;&quot;&gt;len&lt;/span&gt;(links)):
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;print&lt;/span&gt; links.eq(i).attr(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;href&#39;&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2-6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-6&quot;&gt;watchdog&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-6&quot;&gt;
&lt;p&gt;
看门狗,用来监控文件系统改变,这是&lt;a href=&quot;http://pythonhosted.org/watchdog/&quot;&gt;文档&lt;/a&gt;, 基本使用:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; time
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; watchdog.observers &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; Observer
&lt;span style=&quot;color: #FBDE2D;&quot;&gt;from&lt;/span&gt; watchdog.events &lt;span style=&quot;color: #FBDE2D;&quot;&gt;import&lt;/span&gt; LoggingEventHandler

&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #94bff3;&quot;&gt;__name__&lt;/span&gt; == &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:
    event_handler = LoggingEventHandler()
    observer = Observer()
    observer.schedule(event_handler, path=&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;.&#39;&lt;/span&gt;, recursive=&lt;span style=&quot;color: #D8FA3C;&quot;&gt;True&lt;/span&gt;)
    observer.start()
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;try&lt;/span&gt;:
        &lt;span style=&quot;color: #FBDE2D;&quot;&gt;while&lt;/span&gt; &lt;span style=&quot;color: #D8FA3C;&quot;&gt;True&lt;/span&gt;:
            time.sleep(1)
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;except&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;KeyboardInterrupt&lt;/span&gt;:
        observer.stop()
    observer.join()
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
关键的部分有两个:
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;recursive=True,默认是False,如果不指定那么那么就不会监控子目录
&lt;/li&gt;
&lt;li&gt;event&lt;sub&gt;handler&lt;/sub&gt;:这个是文件系统事件的处理对象,可以自己继承watchdog.events.FileSystemEventHandler,
然后重载&lt;a href=&quot;http://pythonhosted.org/watchdog/api.html#watchdog.events.FileSystemEventHandler.on_created&quot;&gt;on&lt;sub&gt;create&lt;/sub&gt;&lt;/a&gt;d, &lt;a href=&quot;http://pythonhosted.org/watchdog/api.html#watchdog.events.FileSystemEventHandler.on_deleted&quot;&gt;on&lt;sub&gt;deleted&lt;/sub&gt;&lt;/a&gt;, &lt;a href=&quot;http://pythonhosted.org/watchdog/api.html#watchdog.events.FileSystemEventHandler.on_modified&quot;&gt;on&lt;sub&gt;modified&lt;/sub&gt;&lt;/a&gt;, &lt;a href=&quot;http://pythonhosted.org/watchdog/api.html#watchdog.events.FileSystemEventHandler.on_moved&quot;&gt;on&lt;sub&gt;moved&lt;/sub&gt;&lt;/a&gt;,
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-2-7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-2-7&quot;&gt;rauth&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-7&quot;&gt;
&lt;p&gt;
一个Oauth库,这是&lt;a href=&quot;https://rauth.readthedocs.org/en/latest/&quot;&gt;文档&lt;/a&gt;, 这是一份示例&lt;a href=&quot;https://gist.github.com/yuyang0/5949932&quot;&gt;代码&lt;/a&gt;, 基本上照着流程走就OK了
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>scheme.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/scheme.html"/>
    <title>scheme笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;scheme笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;scheme笔记(the little schemer)&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;concepts&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1-1&quot;&gt;atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-2&quot;&gt;list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-3&quot;&gt;S-expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-4&quot;&gt;Number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-5&quot;&gt;arithmetic expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-6&quot;&gt;logcal expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-7&quot;&gt;condition expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-8&quot;&gt;多条表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-9&quot;&gt;The Law of Car&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-10&quot;&gt;The Law of Cdr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-11&quot;&gt;The Law of Cons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-12&quot;&gt;The Law of Null?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-13&quot;&gt;The Law of Eq?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-14&quot;&gt;The primitive fuctions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-1-15&quot;&gt;quote，引用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;递归思想&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;停机问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-4&quot;&gt;some example code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;scheme笔记(the little schemer)&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;concepts&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;atom&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
a string of characters &lt;br /&gt;
a string of digits &lt;br /&gt;
 &lt;br /&gt;
(quote atom) or &#39;atom &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;list&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
a collection of atoms enclosed by parentheses. &lt;br /&gt;
example: &lt;br /&gt;
&#39;() &lt;br /&gt;
&#39;(a) &lt;br /&gt;
&#39;(a b c) &lt;br /&gt;
&#39;((a b) c d) &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-3&quot;&gt;S-expression&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-3&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
all lists &lt;br /&gt;
all atoms &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-4&quot;&gt;Number&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-4&quot;&gt;
&lt;p&gt;
we only use whole number
we only use nonegative integers
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-5&quot;&gt;arithmetic expression&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-5&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-scheme&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;(+ 1 2 3 4 5) &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return 15&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;(- 10 2 3)      &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return 5&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;(* 2 3 4)     &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return 24&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;(/ 10 5 5)    &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return 1&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-6&quot;&gt;logcal expression&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-6&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
and: (and &amp;lt;p1&amp;gt; &amp;lt;p2&amp;gt; … &amp;lt;pn&amp;gt;) &lt;br /&gt;
or:  (or &amp;lt;p1&amp;gt; &amp;lt;p2&amp;gt; ….&amp;lt;pn&amp;gt;) &lt;br /&gt;
not: (not &amp;lt;p&amp;gt;) &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-7&quot;&gt;condition expression&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-scheme&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;var&lt;/span&gt; 2)
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; (&lt;span style=&quot;color: #FF6400;&quot;&gt;add&lt;/span&gt; x y) (+ x y)
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;   (&lt;span style=&quot;color: #8DA6CE;&quot;&gt;&amp;lt;p1&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;&amp;lt;e1&amp;gt;&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;   (&lt;span style=&quot;color: #8DA6CE;&quot;&gt;&amp;lt;p2&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;&amp;lt;e2&amp;gt;&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;   (&lt;span style=&quot;color: #8DA6CE;&quot;&gt;&amp;lt;p3&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;&amp;lt;e3&amp;gt;&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;   (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (else-clause))))
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; (&lt;span style=&quot;color: #FF6400;&quot;&gt;abs&lt;/span&gt; x)
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;   (&amp;lt; x 0) (- x)
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;   (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; x)))
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; (&lt;span style=&quot;color: #FF6400;&quot;&gt;abs&lt;/span&gt; x)
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; (&amp;lt; x 0)
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;      (- x)
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;      x))
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-8&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-8&quot;&gt;多条表达式&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-8&quot;&gt;
&lt;p&gt;
(begin ….)
cond的body中有一个隐含的begin，所以cond中可以放多条表达式，而对于if则
必须使用begin明确的将多条表达式包含起来
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-9&quot;&gt;The Law of Car&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-9&quot;&gt;
&lt;p&gt;
The primitive Car is defined only for non­empty lists.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-10&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-10&quot;&gt;The Law of Cdr&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-10&quot;&gt;
&lt;p&gt;
The primitive cdr is defined only for non­empty lists.
The cdr of any non-empty list is always another list.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-11&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-11&quot;&gt;The Law of Cons&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-11&quot;&gt;
&lt;p&gt;
The primitive Cons takes two arguments.
The second argument to cons must be a list.
The result is a list.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-12&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-12&quot;&gt;The Law of Null?&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-12&quot;&gt;
&lt;p&gt;
The primitive null? is defined only for lists.(only (null? &#39;()) return #t)
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-13&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-13&quot;&gt;The Law of Eq?&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-13&quot;&gt;
&lt;p&gt;
The primitive eq? takes two arguments.
Each must be a non-numeric atom.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-14&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-14&quot;&gt;The primitive fuctions&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-14&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
number? &lt;br /&gt;
eq? &lt;br /&gt;
null? &lt;br /&gt;
zero? &lt;br /&gt;
car &lt;br /&gt;
cdr &lt;br /&gt;
cons &lt;br /&gt;
 &lt;br /&gt;
atom? &lt;b&gt;(the three fuction below is defined by the book)&lt;/b&gt; &lt;br /&gt;
add1 &lt;br /&gt;
sub1 &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1-15&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-15&quot;&gt;quote，引用&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-15&quot;&gt;
&lt;p&gt;
first–—&amp;gt; symbol(or a variable)
&#39;first-—&amp;gt; an atom
&#39;1 or 1—&amp;gt; a number
当调用函数时，先会对各个参数求值，所以每一个参数要么是atom，list或者一
个已经绑定的symbol
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;递归思想&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;p class=&quot;verse&quot;&gt;
递归的思想要从逻辑上理解，在设计一个递归函数时，一开始就要明确该函数在 &lt;br /&gt;
逻辑上的作用，然后分清该函数在逻辑上与子问题的联系，并以此为 依据来进 &lt;br /&gt;
行函数体的设计 &lt;br /&gt;
 &lt;br /&gt;
递归函数的设计要点： &lt;br /&gt;
1. 要明确检查终止条件（null？ zero？） &lt;br /&gt;
2. 要明确与子问题的关系，弄清分类的情况（cond） &lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;停机问题&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-scheme&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;last-try&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; ( x )
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;and&lt;/span&gt; ( will-stop ? last-try)
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;         ( eternity x ))))
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
上述代码会产生一个悖论，will-stop?:是否停机，eternity：会永远运行
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-4&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-4&quot;&gt;some example code&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-scheme&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;  1: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;test if x is a atom&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;  2: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;atom?&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;  3: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (x)
&lt;span class=&quot;linenr&quot;&gt;  4: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;and&lt;/span&gt; (not (pair? x))
&lt;span class=&quot;linenr&quot;&gt;  5: &lt;/span&gt;         (not (null? x)))))
&lt;span class=&quot;linenr&quot;&gt;  6: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;add1&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;  7: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt;(x)
&lt;span class=&quot;linenr&quot;&gt;  8: &lt;/span&gt;    (+ x 1)))
&lt;span class=&quot;linenr&quot;&gt;  9: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;sub1&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 10: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (x)
&lt;span class=&quot;linenr&quot;&gt; 11: &lt;/span&gt;    (- x 1)))
&lt;span class=&quot;linenr&quot;&gt; 12: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 13: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 14: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;test if x is the member of lat(list)&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 15: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;member?&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 16: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (x l)
&lt;span class=&quot;linenr&quot;&gt; 17: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 18: &lt;/span&gt;      ((null? l) #f)
&lt;span class=&quot;linenr&quot;&gt; 19: &lt;/span&gt;      (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;or&lt;/span&gt; (eq? x (car l))
&lt;span class=&quot;linenr&quot;&gt; 20: &lt;/span&gt;                (member? x (cdr l)))))))
&lt;span class=&quot;linenr&quot;&gt; 21: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;test if the list is composed only of atom&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 22: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;lat?&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 23: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (l)
&lt;span class=&quot;linenr&quot;&gt; 24: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 25: &lt;/span&gt;     ((null? l) #t)
&lt;span class=&quot;linenr&quot;&gt; 26: &lt;/span&gt;     ((atom? (car l)) (lat? (cdr l)))
&lt;span class=&quot;linenr&quot;&gt; 27: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; #f))))
&lt;span class=&quot;linenr&quot;&gt; 28: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;(firsts &#39;((1 2 3) (a b c) (e f g)))&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 29: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return (1 a e)&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 30: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;firsts&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 31: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (l)
&lt;span class=&quot;linenr&quot;&gt; 32: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 33: &lt;/span&gt;     ((null? l) &#39;())
&lt;span class=&quot;linenr&quot;&gt; 34: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (car (car l))
&lt;span class=&quot;linenr&quot;&gt; 35: &lt;/span&gt;                (firsts (cdr l)))))))
&lt;span class=&quot;linenr&quot;&gt; 36: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;将new插入lat中第一个old的后面&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 37: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;insertR&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 38: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (new old lat)
&lt;span class=&quot;linenr&quot;&gt; 39: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 40: &lt;/span&gt;     ((null? lat) &#39;())
&lt;span class=&quot;linenr&quot;&gt; 41: &lt;/span&gt;     ((eq? old (car lat))
&lt;span class=&quot;linenr&quot;&gt; 42: &lt;/span&gt;      (cons old
&lt;span class=&quot;linenr&quot;&gt; 43: &lt;/span&gt;            (cons new
&lt;span class=&quot;linenr&quot;&gt; 44: &lt;/span&gt;                  (cdr lat))))
&lt;span class=&quot;linenr&quot;&gt; 45: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (car lat) (insertR new old (cdr lat)))))))
&lt;span class=&quot;linenr&quot;&gt; 46: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;将new插入lat中第一个lat的前面&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 47: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;insertL&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 48: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (new old lat)
&lt;span class=&quot;linenr&quot;&gt; 49: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 50: &lt;/span&gt;     ((null? lat) &#39;())
&lt;span class=&quot;linenr&quot;&gt; 51: &lt;/span&gt;     ((eq? old (car lat)) (cons new lat))
&lt;span class=&quot;linenr&quot;&gt; 52: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (car lat) (insertL new old (cdr lat)))))))
&lt;span class=&quot;linenr&quot;&gt; 53: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;将new插入lat中第所有old的后面&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 54: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;multiinsertR&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 55: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (new old lat)
&lt;span class=&quot;linenr&quot;&gt; 56: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 57: &lt;/span&gt;     ((null? lat) &#39;())
&lt;span class=&quot;linenr&quot;&gt; 58: &lt;/span&gt;     ((eq? old (car lat))
&lt;span class=&quot;linenr&quot;&gt; 59: &lt;/span&gt;      (cons old
&lt;span class=&quot;linenr&quot;&gt; 60: &lt;/span&gt;            (cons new (multiinsertR new old (cdr lat)))))
&lt;span class=&quot;linenr&quot;&gt; 61: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (car lat) (multiinsertR new old (cdr lat)))))))
&lt;span class=&quot;linenr&quot;&gt; 62: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 63: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;以*结尾意味着对每一个元素递归&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 64: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;(rember* &#39;aa &#39;(aa (aa bb) (aa bb cc)))&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 65: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;return ((bb) (bb cc))&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 66: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;rember*&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 67: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (a l)
&lt;span class=&quot;linenr&quot;&gt; 68: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 69: &lt;/span&gt;     ((null? l) &#39;())
&lt;span class=&quot;linenr&quot;&gt; 70: &lt;/span&gt;     ((atom? (car l))
&lt;span class=&quot;linenr&quot;&gt; 71: &lt;/span&gt;      (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 72: &lt;/span&gt;       ((eq? a (car l)) (rember* a (cdr l)))
&lt;span class=&quot;linenr&quot;&gt; 73: &lt;/span&gt;       (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (car l) (rember* a (cdr l))))))
&lt;span class=&quot;linenr&quot;&gt; 74: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (rember* a (car l))
&lt;span class=&quot;linenr&quot;&gt; 75: &lt;/span&gt;                 (rember* a (cdr l)))))))
&lt;span class=&quot;linenr&quot;&gt; 76: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;insertR*&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 77: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (new old lat)
&lt;span class=&quot;linenr&quot;&gt; 78: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 79: &lt;/span&gt;     ((null? lat) &#39;())
&lt;span class=&quot;linenr&quot;&gt; 80: &lt;/span&gt;     ((atom? (car lat))
&lt;span class=&quot;linenr&quot;&gt; 81: &lt;/span&gt;      (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; (eq? old (car lat))
&lt;span class=&quot;linenr&quot;&gt; 82: &lt;/span&gt;          (cons old (cons new
&lt;span class=&quot;linenr&quot;&gt; 83: &lt;/span&gt;                          (insertR* new old (cdr lat))))
&lt;span class=&quot;linenr&quot;&gt; 84: &lt;/span&gt;          (cons (car lat) (insertR*  new old (cdr lat)))))
&lt;span class=&quot;linenr&quot;&gt; 85: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (insertR* new old (car lat))
&lt;span class=&quot;linenr&quot;&gt; 86: &lt;/span&gt;                 (insertR* new old (cdr lat)))))))
&lt;span class=&quot;linenr&quot;&gt; 87: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;insertL*&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 88: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (new old lat)
&lt;span class=&quot;linenr&quot;&gt; 89: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 90: &lt;/span&gt;     ((null? lat) &#39;())
&lt;span class=&quot;linenr&quot;&gt; 91: &lt;/span&gt;     ((atom? (car lat)) (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; (eq? old (car lat))
&lt;span class=&quot;linenr&quot;&gt; 92: &lt;/span&gt;                            (cons new (cons old
&lt;span class=&quot;linenr&quot;&gt; 93: &lt;/span&gt;                                            (insertL* new old (cdr
&lt;span class=&quot;linenr&quot;&gt; 94: &lt;/span&gt;                                                               lat))))
&lt;span class=&quot;linenr&quot;&gt; 95: &lt;/span&gt;                            (cons (car lat) (insertL* new old (cdr
&lt;span class=&quot;linenr&quot;&gt; 96: &lt;/span&gt;                                                               lat)))))
&lt;span class=&quot;linenr&quot;&gt; 97: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (insertL* new old (car lat))
&lt;span class=&quot;linenr&quot;&gt; 98: &lt;/span&gt;                 (insertL* new old (cdr lat)))))))
&lt;span class=&quot;linenr&quot;&gt; 99: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;100: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;lat中a出现的次数，如果lat的元素时list则递归&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;101: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;occur*&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;102: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (a lat)
&lt;span class=&quot;linenr&quot;&gt;103: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;104: &lt;/span&gt;     ((null? lat) 0)
&lt;span class=&quot;linenr&quot;&gt;105: &lt;/span&gt;     ((atom? (car lat)) (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; (eq? a (car lat))
&lt;span class=&quot;linenr&quot;&gt;106: &lt;/span&gt;                            (add1 (occur* a (cdr lat)))
&lt;span class=&quot;linenr&quot;&gt;107: &lt;/span&gt;                            (occur* a (cdr lat))))
&lt;span class=&quot;linenr&quot;&gt;108: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (+ (occur* a (car lat))
&lt;span class=&quot;linenr&quot;&gt;109: &lt;/span&gt;              (occur* a  (cdr lat)))))))
&lt;span class=&quot;linenr&quot;&gt;110: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;eqlist&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;111: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (l1 l2)
&lt;span class=&quot;linenr&quot;&gt;112: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;113: &lt;/span&gt;     ((&lt;span style=&quot;color: #FBDE2D;&quot;&gt;and&lt;/span&gt; (null? l1)
&lt;span class=&quot;linenr&quot;&gt;114: &lt;/span&gt;           (null? l2)) #t)
&lt;span class=&quot;linenr&quot;&gt;115: &lt;/span&gt;     ((&lt;span style=&quot;color: #FBDE2D;&quot;&gt;or&lt;/span&gt; (null? l1)
&lt;span class=&quot;linenr&quot;&gt;116: &lt;/span&gt;          (null? l2)) #f)
&lt;span class=&quot;linenr&quot;&gt;117: &lt;/span&gt;     ((&lt;span style=&quot;color: #FBDE2D;&quot;&gt;and&lt;/span&gt; (atom? (car l1))
&lt;span class=&quot;linenr&quot;&gt;118: &lt;/span&gt;           (atom? (car l2)))
&lt;span class=&quot;linenr&quot;&gt;119: &lt;/span&gt;           (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; (eq? (car l1)
&lt;span class=&quot;linenr&quot;&gt;120: &lt;/span&gt;                    (car l2))
&lt;span class=&quot;linenr&quot;&gt;121: &lt;/span&gt;               (eqlist (cdr l1) (cdr l2))
&lt;span class=&quot;linenr&quot;&gt;122: &lt;/span&gt;               #f))
&lt;span class=&quot;linenr&quot;&gt;123: &lt;/span&gt;     ((&lt;span style=&quot;color: #FBDE2D;&quot;&gt;or&lt;/span&gt; (atom? (car l1))
&lt;span class=&quot;linenr&quot;&gt;124: &lt;/span&gt;          (atom? (car l2))) #f)
&lt;span class=&quot;linenr&quot;&gt;125: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;and&lt;/span&gt; (eqlist (car l1) (car l2))
&lt;span class=&quot;linenr&quot;&gt;126: &lt;/span&gt;                (eqlist (cdr l1) (cdr l2)))))))
&lt;span class=&quot;linenr&quot;&gt;127: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;集合操作&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;128: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;intersect&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;129: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (set1 set2)
&lt;span class=&quot;linenr&quot;&gt;130: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;131: &lt;/span&gt;     ((null? set1) &#39;())
&lt;span class=&quot;linenr&quot;&gt;132: &lt;/span&gt;     ((member? (car set1) set2)
&lt;span class=&quot;linenr&quot;&gt;133: &lt;/span&gt;      (cons (car set1)
&lt;span class=&quot;linenr&quot;&gt;134: &lt;/span&gt;            (intersect (cdr set1) set2)))
&lt;span class=&quot;linenr&quot;&gt;135: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (intersect (cdr set1) set2)))))
&lt;span class=&quot;linenr&quot;&gt;136: &lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;137: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;define&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;union&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;138: &lt;/span&gt;  (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;lambda&lt;/span&gt; (set1 set2)
&lt;span class=&quot;linenr&quot;&gt;139: &lt;/span&gt;    (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;cond&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;140: &lt;/span&gt;     ((null? set1) set2)
&lt;span class=&quot;linenr&quot;&gt;141: &lt;/span&gt;     ((member? (car set1) set2)
&lt;span class=&quot;linenr&quot;&gt;142: &lt;/span&gt;      (union (cdr set1) set2))
&lt;span class=&quot;linenr&quot;&gt;143: &lt;/span&gt;     (&lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt; (cons (car set1)
&lt;span class=&quot;linenr&quot;&gt;144: &lt;/span&gt;     (union (cdr set1) set2))))))
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>org-mode-dropbox-blog.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/org-mode-dropbox-blog.html"/>
    <title>使用org-mode与dropbox搭建静态博客</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;使用org-mode与dropbox搭建静态博客&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;org-mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-2&quot;&gt;dropbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-3&quot;&gt;搭建静态博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;org-mode&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
org-mode是emacs的一个主模式,所以如果你不用emacs那么一切都无从谈起,vim有一个org-mode的移植版本
根据官方的的说法:Org mode is for keeping notes, maintaining TODO lists, planning projects, and authoring
documents with a fast and effective plain-text system.可以看出org-mode可以记笔记,管理TODO list等等,它最大
的特点是可以把你的文档折叠起来,而且有一个强大的导出系统,他可以将你的文档导出为html,pdf,postscript等等,而且
org-mode还有一个叫Babel的神器,它可以让你在文档中直接运行代码,支持的语言非常之多,我常用的C,python,lisp,dot等等
都支持,org-mode是一个宝库,只要你肯花时间总能发现惊喜.分享个高手的视频(需翻墙):
&lt;/p&gt;
&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Ho6nMWGtepY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-2&quot;&gt;dropbox&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;p&gt;
DropBox 是一款非常优秀的免费网络文件同步工具(云存储服务)。当你在不同的电脑、平板、手机上都安装了 Dropbox 之后，
无论在其中任何一个设备上新增、修改或删除文件，Dropbox 将会通过网络全自动地将这个更改应用到你全部的设备上去，让
你所有的设备上的文件都能保持完全一致，并且可以随时随地使用你的文件！与国内的类似产品相比有以下优点：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;全平台支持: dropbox支持windows，mac，linux，ios，android等，特别是它支持linux，这对于linux党简直就是福音,
这也是我使用dropbox的重要原因
&lt;/li&gt;
&lt;li&gt;稳定: 现在dropbox已经很稳定了，基本没有宕机的担忧了(记得金山快盘曾经因为技术问题使很多用户的文件被删掉了)，
而且它已经成为硅谷中比较成功的初创公司了,短期内不用担心它会倒闭了(YUNIO,坚果中枪了),而且dropbox是公司主力产
品,也不用担心它会无缘无故关闭(google reader的关闭让我很抓狂).
&lt;/li&gt;
&lt;li&gt;第三方工具众多,这相对于国内的类似产品是一个巨大的优势,dropbox有很多妙用基本都是利用第三方工具实现的,本文利用
dropbox搭建静态博客就是利用的pancake.io这个第三方应用.
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
那么dropbox的劣势主要是
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;可能被墙:facebook被墙我能理解,但dropbox被墙我是真的不理解,可是是事实是dropbox确实被墙过.
&lt;/li&gt;
&lt;li&gt;速度相对慢一些,这一点对我而言问题不大,因为同步本来就是后台应用,慢一点也无所谓.
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
打个广告,点这个链接&lt;a href=&quot;http://db.tt/PtdhKnAr&quot;&gt;http://db.tt/PtdhKnAr&lt;/a&gt; 注册dropbox后,你与我都可以获得500MB的空间奖励,双赢,何乐而不为呢,:)
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-3&quot;&gt;搭建静态博客&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;p&gt;
     目前搭建静态博客有很多种方法,很流行的一种就是利用github pages,我之所以不用这种方法是因为,这种方法不能和org-mode无缝
衔接,而且一旦文档修改就必须使用git将文档push到github上,比较麻烦,不像dropbox一旦改动自动同步.而且我觉得版本管理对编写
博客意义不大.
&lt;/p&gt;

&lt;p&gt;
上文提到org-mode可以导出为html,这是搭建博客的基础,先配置org-mode:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-lisp&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;(&lt;span style=&quot;color: #FBDE2D;&quot;&gt;require&lt;/span&gt; &#39;&lt;span style=&quot;color: #D8FA3C;&quot;&gt;org-publish&lt;/span&gt;)
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;(setq org-publish-project-alist
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;      &#39;(
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;        (&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;blog-notes&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:base-directory&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;~/Documents/note/&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:base-extension&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;org&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:publishing-directory&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;~/Documents/blog/&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:recursive&lt;/span&gt; t
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;         &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;:publishing-function org-publish-org-to-html ;;org 7.X&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:publishing-function&lt;/span&gt; org-html-publish-to-html
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;         &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;:link-home &quot;index.html&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;         &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;:link-up &quot;sitemap.html&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:html-link-home&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;index.html&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:html-link-up&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;sitemap.html&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:headline-levels&lt;/span&gt; 5
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:section-numbers&lt;/span&gt; nil
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:auto-preamble&lt;/span&gt; t
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:auto-sitemap&lt;/span&gt; t                &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;Generate sitemap.org automagically...&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:sitemap-filename&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;sitemap.org&quot;&lt;/span&gt;  &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;... call it sitemap.org (it&#39;s the default)...&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:sitemap-title&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;Sitemap&quot;&lt;/span&gt;         &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;... with title &#39;Sitemap&#39;.&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:author&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;your name&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:email&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;your email&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;23: &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;         &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;:style    &quot;&amp;lt;link rel=\&quot;stylesheet\&quot; type=\&quot;text/css\&quot; href=\&quot;css/main.css\&quot;/&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;24: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:html-head&lt;/span&gt;  &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;&amp;lt;link rel=\&quot;stylesheet\&quot; type=\&quot;text/css\&quot; href=\&quot;css/main.css\&quot;/&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;25: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:html-preamble&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;可以添加博客的头部&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;26: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:html-postamble&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot; 评论系统代码(disqus,多说等等)&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;27: &lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;    &amp;lt;p class=\&quot;author\&quot;&amp;gt;Author: %a (%e)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Last Updated %d . Created by %c &amp;lt;/p&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;28: &lt;/span&gt;         )
&lt;span class=&quot;linenr&quot;&gt;29: &lt;/span&gt;        (&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;blog-static&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;30: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:base-directory&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;~/Documents/note/&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;31: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:base-extension&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;css&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;js&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;pdf&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;png&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;jpg&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;gif&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;mp3&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;ogg&lt;/span&gt;&lt;span style=&quot;color: #E9C062; font-weight: bold;&quot;&gt;\\&lt;/span&gt;&lt;span style=&quot;color: #ff0000; font-weight: bold;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #61CE3C;&quot;&gt;swf&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;32: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:publishing-directory&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;~/Documents/blog/&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;33: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:recursive&lt;/span&gt; t
&lt;span class=&quot;linenr&quot;&gt;34: &lt;/span&gt;         &lt;span style=&quot;color: #94bff3;&quot;&gt;:publishing-function&lt;/span&gt; org-publish-attachment
&lt;span class=&quot;linenr&quot;&gt;35: &lt;/span&gt;         )
&lt;span class=&quot;linenr&quot;&gt;36: &lt;/span&gt;        (&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;blog&quot;&lt;/span&gt; &lt;span style=&quot;color: #94bff3;&quot;&gt;:components&lt;/span&gt; (&lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;blog-notes&quot;&lt;/span&gt; &lt;span style=&quot;color: #61CE3C;&quot;&gt;&quot;blog-static&quot;&lt;/span&gt;))
&lt;span class=&quot;linenr&quot;&gt;37: &lt;/span&gt;        &lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;38: &lt;/span&gt;        ))
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
主要的属性有以下几个:
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;base-directory: 存放org-mode源文档的目录
&lt;/li&gt;
&lt;li&gt;publishing-directory: 导出的html存放的目录
&lt;/li&gt;
&lt;li&gt;html-preamble: 内容会添加到导出html的content的开头,我在preamble添加了博客的导航以及标题,如果你想简单点
那么这里可以去掉
&lt;/li&gt;
&lt;li&gt;html-postamble: 内容会添加到导出html的content的开头与结尾, 我在在postamble添加了disqus的评论代码
&lt;/li&gt;
&lt;li&gt;html-head: 要添加到导出的html的head标签内的代码,我添加了个css样式表(css/main.css)
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
需要注意,上面的配置是org版本是8.0,如果你用7.X版本,那么就是使用对应的注释代码,如将第十行的
org-html-publish-to-html换成org-publish-org-to-html.最后还需要一个css,这是我的&lt;a href=&quot;static/css/main.css&quot;&gt;css&lt;/a&gt; ,这个css还有点问题,
目前还在完善中.通过以上设置后,你在emacs中按M-x org-publish-project 然后输入blog就可以将base-directory
中的org文件导出到publishing-directory,静态文件也会相应的导出,这是我publishing-diretory的目录结构:
&lt;/p&gt;


&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;static/img/publish-dir-tree.png&quot; alt=&quot;publish-dir-tree.png&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
到这一步本地的配置基本就完成了,接着要用到pancake.io,先去
&lt;a href=&quot;http://pancake.io/&quot;&gt;官网&lt;/a&gt; 直接用dropbox账号登陆,它会请求dropbox的权限,同意后就会在dropbox的Apps目录创建一个Pancake.io的目录,然后
将你刚刚导出的那些html文件(包括静态文件)都扔到Pancake.io目录中(我建议直接将publishing-directory设为your-dir/Dropbox/Apps/Pancake.io ),
如果你添加了博客的标题与导航,那么你可能还需要在publishing-directory中创建about.html, guestbook.html,search.html,
如何创建可以参见本博客的代码自行修改,注意本博客的搜索使用的是google的自定义搜索,所以你需要自己去创建并获得Id,替换
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-javascript&quot;&gt;&lt;span style=&quot;color: #FBDE2D;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;customSearchControl&lt;/span&gt; = &lt;span style=&quot;color: #FBDE2D;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #8DA6CE;&quot;&gt;google.search.CustomSearchControl&lt;/span&gt;(&lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;005863396545237100197:nhuiw5cz1q4&#39;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
中的ID.这样一个静态博客就大功告成了,以后你只要在你的base-directory编辑,增加org文档,然后调用org-publish-project,
那么博客就会自动更新,当然也建议更新index.org,就这么简单…
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>investment.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/investment.html"/>
    <title>投资笔记</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;投资笔记&lt;/h1&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1&quot;&gt;Investment&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-1&quot;&gt;投资原则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-2&quot;&gt;some advice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3&quot;&gt;财务报表基础&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-3-1&quot;&gt;资产负债表&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-3-1-1&quot;&gt;资产(流动性高的排前面)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-1-2&quot;&gt;负债(偿还期限短的排前面)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-1-3&quot;&gt;所有者权益&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-1-4&quot;&gt;一般的财务比率&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-2&quot;&gt;损益表(或利润表)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-3-3&quot;&gt;现金流量表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-4&quot;&gt;常用的会计术语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-5&quot;&gt;分析公司的五个方面：&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-5-1&quot;&gt;成长性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-5-2&quot;&gt;收益性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-6&quot;&gt;财务伪装&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;#sec-1-6-1&quot;&gt;六个危险信号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-6-2&quot;&gt;七个缺陷&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-1-7&quot;&gt;财务英文词汇：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;Investment&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;投资原则&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;做好功课
&lt;/li&gt;
&lt;li&gt;寻找有强大竞争力的公司
一家公司是如何使竞争者无路可走，从而保持高额的回报率
&lt;/li&gt;
&lt;li&gt;拥有安全边际(至少25%，如果公司的前景没有参考，那么应该留得更大)
&lt;/li&gt;
&lt;li&gt;长期持有
&lt;/li&gt;
&lt;li&gt;知道何时卖出
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;some advice&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;不要试图通过发现下一个微软公司而获得巨额收益。你应该关注于发现股价已低于估值的可靠的公司。所以不要预测市场上哪个小公司会成为大公司，而应该潜心的寻找那些股票价格远低于其价值的公司。
&lt;/li&gt;
&lt;li&gt;了解市场的历史能帮助你避免重复那些易犯的错误。如果人们试图使你确信“这次与以往不同”，不要理睬他们。
&lt;/li&gt;
&lt;li&gt;不要陷入“一个好产品将创造一个高质量公司”这样一个假设的陷阱里。在你被一项激动人心的技术或者一个极好的产品掏光口袋之前，确信你已经核实了该公司的商业模式。
&lt;/li&gt;
&lt;li&gt;不要害怕使用你的优势。买入的最好时机是当所有人都从一个特定种类的资产出逃的时候。牛市在悲观中诞生，在质疑中成长，在乐观中成熟，在兴奋中死亡，悲观中买进，在乐观中卖出，不要受他人意志的影响，虽然违背众人的意志很难。
&lt;/li&gt;
&lt;li&gt;试图选择市场时机是一个傻瓜游戏。有足够的证据证明市场是不能选择时机的。减少投资风险的最佳路径是认真注意估值。不要寄希望于其他投资者会以高价接收你的盘，即使你买的是好公司股票也不要这样。博傻理论害死人，不要觉得自己不会是最后一个傻瓜，人的贪婪很容易让人成为最后一个傻瓜，所以不要跟风追逐一些正面消息泛滥，势头强劲的股票，记住好公司不一定是好股票，选股必须先对公司估值，当目前的股价低于其估值，且留有一定的安全边际时才值得投资。
&lt;/li&gt;
&lt;li&gt;一个公司财务绩效的真实度量标准是现金流，而不是财务报告的每股盈利。
   &lt;b&gt;彼得林奇的成功投资&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;买普通股可以赚大钱也可以损失惨重，风险与收益并存。
&lt;/li&gt;
&lt;li&gt;投资时向公司投资，而不是向市场投资。
&lt;/li&gt;
&lt;li&gt;预测经济的变化趋势和市场与股价的短期走势没有意义
&lt;/li&gt;
&lt;li&gt;不要管短期波动，股票的长期回报是可以预测，而且比长期债劵的回报要高
&lt;/li&gt;
&lt;li&gt;股票投资选准一只股票就可以了，要善于发现那些还没有被专业投资机构发现的优质股票
&lt;/li&gt;
&lt;li&gt;不做研究的投资就像不看牌玩扑克一样盲目
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;财务报表基础&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-3-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-1&quot;&gt;资产负债表&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-1&quot;&gt;
&lt;p&gt;
资产负债表公司特定的时间点的资产与负债情况
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-3-1-1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-3-1-1&quot;&gt;资产(流动性高的排前面)&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-3-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;流动资产
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;现金和现金等价物，短期投资，
&lt;/li&gt;
&lt;li&gt;应收账款:可以用应收账款与销售收入的增长速度比较来衡量公司的收款能力或者公司是否使用了一个宽松的信用条件,
而且应该考察应收账款是否集中在少数客户手中,越集中风险越大.一般该项目还有一个 &lt;b&gt;坏账准备&lt;/b&gt; 的条目,要注意检查
坏账准备的准确性,可以和同行业的公司比较.
&lt;/li&gt;
&lt;li&gt;存货: 存货计算有两种方法,即先进先出,后进先出,之所以存在这两种情况是因为同一种产品,在不同的时间它的进货
价格可能是不同的,所以这两种方法就是为了确定到底应该用什么时候的价格来计算存货价值.存货周转率可以使用销售
成本除以平均存货水平，如果产品贬值快的话，那么存货周转率低是一个不好的兆头.
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;非流动资产（
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;固定资产，
&lt;/li&gt;
&lt;li&gt;投资（长期债劵，对其他公司的股票投资），无形资产）
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;无形资产
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;商誉: 收购其他公司时的溢价(收购价格与被收购公司的净账面价值(资产减去负债)的差值)，很可能会大幅减少
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3-1-2&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-3-1-2&quot;&gt;负债(偿还期限短的排前面)&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-3-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;流动负债（期限短于一年必须以现金偿还的债务）
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;商业本票
&lt;/li&gt;
&lt;li&gt;应付账款
&lt;/li&gt;
&lt;li&gt;预计负债:应付利息,水电费,员工工资(大陆会单独列出)
&lt;/li&gt;
&lt;li&gt;应计所得税
&lt;/li&gt;
&lt;li&gt;一年内到期的中长期债务
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;非流动负债（一年或一年以上的借款，如公司发行的长期债券，银行的长期借款等）
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3-1-3&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-3-1-3&quot;&gt;所有者权益&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-3-1-3&quot;&gt;
&lt;p&gt;
总资产减去总负债，未分配利润（利润中没有被股东分红分出去的部分，是一个累计账户，包含多年的累计利润）
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3-1-4&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;sec-1-3-1-4&quot;&gt;一般的财务比率&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-1-3-1-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;流动比率 = 流动资产 / 流动负债
该比率一般要高于1,因为如果流动资产低于流动负债,那么公司短期内很有可能出现财务危机,
但是这不是绝对的,对于有些公司,低的流动比率反而是更好的征兆
&lt;/li&gt;
&lt;li&gt;负债比率 = 总负债 / 总资产
应该将企业与过去正常情况下的财务结构比较,看负债比率是否明显恶化,同时将公司与同行业公司比较,
看公司的负债比率是否明显偏高, 同时要观察现金流量表,看是否能创造足够的现金来应付本金与利息
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-2&quot;&gt;损益表(或利润表)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-2&quot;&gt;
&lt;p&gt;
损益表是公司一段时间里损失或者赚了多少会计利润（不同于现金利润）, 可以提供绩效评估的功能.
收入应满足2个条件: 服务或产品已经提供给顾客, 公司预期能够收回现金
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;b&gt;收入((净)销售收入)&lt;/b&gt; :净销售＝销售收入－销售退回与折让－销售折扣,
一个季度或者一年公司销售多少，有可能按照业务类型或者地域而单独列出。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;销售成本&lt;/b&gt;  :当期销售商品的进货成本,可能因为存货评价方式的不同而不同(先进先出,后进先出)
是与直接创造收入有关的费用，大公司可能会将该科目分解为销售成本和服务成本。人工成本，原材料（制造商）或者货物批发价格（零售商）。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;毛利&lt;/b&gt; :收入减去销售成本，不在损益表中。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;销售和管理费用&lt;/b&gt; :营业费用，包括营销费用，管理人员工资，有时也包括研发费用，不过研发费用一般作为单独科目列出
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;折旧和摊销&lt;/b&gt; :公司购买一项资产，并打算使用一段时间，那么未来的几年里都要逐步的摊销这部分成本。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;非经营性损益&lt;/b&gt; :公司会把它的的非常规营业的一次性费用与收益放在一起，如关闭一个工厂的费用或者卖出一个分部的收益，要重点考察，连续性的非经营性费用是管理层缺乏信心的一个标志，理想情况下，这个项目大部分时间应该是空白的。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;营业利润（营业收入）&lt;/b&gt; :销售收入等于收入减去销售成本和全部营业费用，是公司在实际经营活动中赚取的利润，与之相对的是利息收益、一次性收益和其他一些非营业性项目。实际上，公司常常把非经营性费用（比如销账）算到营业利润中，营业利润是一个接近于真实的数字，用营业利润计算营业毛利润率，和同行业的公司比较
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;利息收益／费用&lt;/b&gt; :公司获得或者支出的利息
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;赋税&lt;/b&gt; :公司缴纳的所得税
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;净利润&lt;/b&gt; :税后利润
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;股份数字&lt;/b&gt; :基准（目前也就是这份报表的统计期内实际存在的平均股份数），稀释（包括实际存在的股份数与可转换为股票（但目前可能没有转换，包括股票期权和可转换债劵）的有价证劵的和），每股盈利（单独看没有太大的意义）
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-3-3&quot;&gt;现金流量表&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-3&quot;&gt;
&lt;p&gt;
现金流量表是记录全部流入流出公司现金的情况，包括经营活动发生的现金流量，投资活动发生的现金流量和筹集资金活动发生的现金流量。
经营活动发生的现金流是需要重点关注的项目.
现金流量表有两种编制方法：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;直接法: 将经营，筹资，投资活动带来的现金流一一列出
&lt;/li&gt;
&lt;li&gt;间接法: 对公司的净利润进行校正与调整，其校正过程如下：
必须将折旧费用加回来
必须将处理资产损失
应收账款增加，则现金流量减少，存货增加则现金流量减少，应付账款增加则现金流量增加

&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;b&gt;净利润（净收益）&lt;/b&gt; ：就是损益表的销售收入。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;折旧和摊销&lt;/b&gt; ：这不是现金费用，应该与净利润相加
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;员工股票计划的税收收益&lt;/b&gt; ：员工执行期权会产生低税账单，公司可以从中获得收益但是这和股价的变化有很大的关系，因为股票价格下跌时员工是不会执行期权的。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;营运资本变动&lt;/b&gt; ：从外部借钱，应收账款的变动，赊销，存货的增多或者减少都会导致营运资本的变动
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;一次性费用&lt;/b&gt; ：譬如说公司的重组费用，收购费用，这很多时候是非现金费用，计算时要加上来。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;经营活动现金净额&lt;/b&gt; ：经营活动现金流量就是从净利润中加上或减去这个科目的结果
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;
营收以及利润快速增长的公司如果发生财务危机，大部分情况是因为应收账款和存货大幅增长
&lt;/p&gt;

&lt;p&gt;
你分析一家公司的时候，要确认你弄清楚了1美元的现金在公司里是怎样流转的。如果你不这样做，你也许根本没有弄明白这家公司，
因此也不能轻率地购买它的股票
&lt;/p&gt;

&lt;p&gt;
损益表和现金流量表的关键区别权责发生制是理解财务报表的一个关键的概念。当一项服务或一种物品提供给买家的时候，
损益表记录销售收入与相应的费用，但是现金流量表只关心现金的流入和流出，现金流量表把资产负债表和损益表联系了起来。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-4&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-4&quot;&gt;常用的会计术语&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;p&gt;
会计利润：所有者支付除资本以外的所有要素报酬之后剩下的利润，会计利润必须要与收入和费用（包括折旧）尽可能的匹配。然而现金利润测算的是实际生意中流入流出了多少。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-5&quot;&gt;分析公司的五个方面：&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-5&quot;&gt;
&lt;p&gt;
一个成功的投资者是购买一个好主意，而不是购买一个收购机器，如果不知道一个企业除掉收购之后的真实增长率是多少，那就不要买他的股票
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-5-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-5-1&quot;&gt;成长性&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-5-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;&lt;b&gt;成长性&lt;/b&gt; ：销售增长主要来自于四个方面：销售更多的产品和服务，提高价格，销售新的产品和服务，收购别的公司。要特别弄清楚公司的成长来自于哪些方面，并且每一方面占得比重是多少，对于收购要特别注意。
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;成长的质量&lt;/b&gt; ：当公司的利润增长长期（5到10年）超过销售增长时，要明白公司是如何获得超额的利润的，通过削减成本可以提高利润率，但是不可持续，因为你不可能无休止的削减成本，特别是不适当的削减成本，少交税，回购股票对股东有利，可是也是短期的，是低质量的成长
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-5-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-5-2&quot;&gt;收益性&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-5-2&quot;&gt;
&lt;p&gt;
有两个评估指标：资本收益率和自由现金流量
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;资产收益率（ROA  return on assert）：评估将资产转变成利润的效率
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;销售净利率 = 净利润/销售收入
&lt;/li&gt;
&lt;li&gt;资产周转率 = 销售收入 / 资产
&lt;/li&gt;
&lt;li&gt;资产收益率 = 销售净利率 * 资产周转率 = 净利润/资产
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;净资产收益率（ROE）：反应的是公司使用所有者权益（资产 – 负债）的效率，评估的是使用股东的钱投资产生的回报的程度
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;财务杠杆比率 = 资产/ 所有者权益
&lt;/li&gt;
&lt;li&gt;净资产收益率 = 资产收益率 * 财务杠杆比率 = 净利润 / 所有者权益
&lt;/li&gt;
&lt;li&gt;财务杠杆比率是衡量一家公司的负债在总资产占得分量是大还是小，财务杠杆比率越高，意味着公司的负债比率越高。如果公司的业务很稳定，那么较高的负债对公司影响不大，但如果公司的业务不稳定或者是周期性的，那么高的财务杠杆比率会比较危险。非金融公司在没有过分的财务杠杆比率的前提下如果能取得10%的净资产收益率就是可以投资的。
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;自由现金流（FCF）：
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;自由现金流 = 经营性现金流 – 资本性支出
&lt;/li&gt;
&lt;li&gt;%5的销售收入转变成自由现金流是必要的。
&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
拥有高的净资产收益率与高的自由现金流的公司值得投资
投入资本收益率（ROIC）：矫正了资产收益率与净资产收益率所带来的一些扭曲，比二者更全面，是更好的盈利度量工具
财务健康状况
过高的财务杠杆比率可以放大收益，也可以扩大风险，所以对于过高的财务杠杆比率的公司要重点关注。
空头情形
对公司可能出现的各种负面潜在因素进行列举分析
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-6&quot;&gt;财务伪装&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-6&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-6-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-6-1&quot;&gt;六个危险信号&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-6-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;衰退的现金流：如果公司净利润仍在大幅增长，可是经营性现金流却在粗略的同比例增长或者还有衰退，，那么就应该特别注意。
&lt;/li&gt;
&lt;li&gt;连续的一次性费用：
&lt;/li&gt;
&lt;li&gt;连续的收购：
&lt;/li&gt;
&lt;li&gt;CFO或者审计师离开公司：频繁的更换审计师，或者CFO离奇的离开公司要特别注意，特别是当有公司会计账目丑闻传出时。
&lt;/li&gt;
&lt;li&gt;没有收到货款的账单：相对于销售收入而言过快的应收账款增长
&lt;/li&gt;
&lt;li&gt;变更赊销付款条件和应收账款：
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-6-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-6-2&quot;&gt;七个缺陷&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-6-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;投资收益：试图将投资收益合并入营业利润来推高财务业绩。
&lt;/li&gt;
&lt;li&gt;养老金缺陷：
&lt;/li&gt;
&lt;li&gt;养老金补充：
&lt;/li&gt;
&lt;li&gt;化为乌有的现金流：员工执行期权的税收收益过高的话是一个不好的现象，因为这和股价密切相关，所以这样的现金流随时可能化为乌有。所以对于现金流很充沛而且股价上涨很快的公司要分析有多少事来自员工执行期权的税收收益。
&lt;/li&gt;
&lt;li&gt;存货增长过快：开拓新市场时存货暂时增长是正常的，但是如果一般情况下，存货的增长速度比销售收入的增长快，那是一个不好的情况，特别是存货贬值快的行业。
&lt;/li&gt;
&lt;li&gt;不好的变更：如把固定资产的折旧年限加长，还有坏账准备金没有与应收账款同步增长，这些都有粉饰财务报表的嫌疑。
&lt;/li&gt;
&lt;li&gt;费用化还是非费用化：某些费用公司可以将它资本化，也就是计入资产，这样隐藏了费用，也就粉饰了财务报表
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
给公司估值
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;市销率：是各种比率中最基础的，用每股的价格除以每股的销售收入，市销率有个比较大的弊端，就是不同的公司销售收入的价值不同，如零售公司的销售收入的价值就较低，因为其利润率低。
&lt;/li&gt;
&lt;li&gt;市净率：把一只股票的市场价值和当期资产负债表的账面价值（也就是所有者权益或净资产）比较，对服务类公司不可靠，但是对金融类公司或者有巨额有形资产的公司则比较好
&lt;/li&gt;
&lt;li&gt;市盈率：
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;
巴菲特的投资策略：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;不理睬对经济大趋势的预测，也不理睬对股价走势的预测，只注重长期价值
&lt;/li&gt;
&lt;li&gt;只买力所能及的股票，也就是对公司和公司所在的行业要足够的熟悉
&lt;/li&gt;
&lt;li&gt;要找对待股东的钱像对待自己的钱一样认真的公司
&lt;/li&gt;
&lt;li&gt;要详细的研究股票的竞争对手的前景，要看第一手的信息，不要看分析家的报告，因为那是二手的信息，但是分析不用过于精细
&lt;/li&gt;
&lt;li&gt;一旦看重某种股票就要义无反顾的买（这点不是适合每一个人，一般人要控制风险，只将自己能够承担风险的资金投入进去，不是每一个人都能像巴菲特那样预测准确）
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-7&quot;&gt;财务英文词汇：&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-7&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;ROE                      净资产收益率
&lt;/li&gt;
&lt;li&gt;ROA                      资产收益率
&lt;/li&gt;
&lt;li&gt;ROIC                     投入资本收益率
&lt;/li&gt;
&lt;li&gt;Fixed assert             固定资产
&lt;/li&gt;
&lt;li&gt;Non-current asset        非流动资产
&lt;/li&gt;
&lt;li&gt;Current assert           流动资产
&lt;/li&gt;
&lt;li&gt;Current Investment       短期投资
&lt;/li&gt;
&lt;li&gt;Bank and Cash            货币现金
&lt;/li&gt;
&lt;li&gt;Share capital            股本
&lt;/li&gt;
&lt;li&gt;Profit before income tax 税前盈利
&lt;/li&gt;
&lt;li&gt;Income tax               所得税
&lt;/li&gt;
&lt;li&gt;Net profit               净利润
&lt;/li&gt;
&lt;li&gt;Inventory                存货
&lt;/li&gt;
&lt;li&gt;Balance sheet            资产负债表
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 </content>
  </entry>
  
  <entry>
    <id>code-snippet.html</id>
    <link type="text/html" rel="alternate" href="http://yuyang.pancakeapps.com/code-snippet.html"/>
    <title>有用的代码片段</title>
    <updated>2013-04-26T00:00:00-07:00</updated>
    <author>
      <name>Yu Yang</name>
      <uri>http://yuyang.pancakeapps.com/</uri>
    </author>
    <content type="html"> 
&lt;h1 class=&quot;title&quot;&gt;有用的代码片段&lt;/h1&gt;
&lt;ol class=&quot;org-ol&quot;&gt;&lt;li&gt;count lines of code in a directory
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-sh&quot;&gt;find . -name &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;*.php&#39;&lt;/span&gt; | xargs wc -l
&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #AEAEAE; font-style: italic;&quot;&gt;works on names with space&lt;/span&gt;
( find ./ -name &lt;span style=&quot;color: #61CE3C;&quot;&gt;&#39;*.[h|c|cc|cpp|php]&#39;&lt;/span&gt; -print0 | xargs -0 cat ) | wc -l
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;删除链表节点
&lt;div class=&quot;org-src-container&quot;&gt;

&lt;pre class=&quot;src src-C&quot;&gt;&lt;span style=&quot;color: #8DA6CE;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;remove_if&lt;/span&gt;(&lt;span style=&quot;color: #8DA6CE;&quot;&gt;node&lt;/span&gt; ** &lt;span style=&quot;color: #FF6400;&quot;&gt;head&lt;/span&gt;, &lt;span style=&quot;color: #8DA6CE;&quot;&gt;remove_fn&lt;/span&gt; &lt;span style=&quot;color: #FF6400;&quot;&gt;rm&lt;/span&gt;)
{
    &lt;span style=&quot;color: #FBDE2D;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #8DA6CE;&quot;&gt;node&lt;/span&gt;** &lt;span style=&quot;color: #FF6400;&quot;&gt;curr&lt;/span&gt; = head; *curr; )
    {
        &lt;span style=&quot;color: #8DA6CE;&quot;&gt;node&lt;/span&gt; * &lt;span style=&quot;color: #FF6400;&quot;&gt;entry&lt;/span&gt; = *curr;
        &lt;span style=&quot;color: #FBDE2D;&quot;&gt;if&lt;/span&gt; (rm(entry))
        {
            *curr = entry-&amp;gt;next;
            free(entry);
        }
        &lt;span style=&quot;color: #FBDE2D;&quot;&gt;else&lt;/span&gt;
            curr = &amp;amp;entry-&amp;gt;next;
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt; </content>
  </entry>
  

</feed>
